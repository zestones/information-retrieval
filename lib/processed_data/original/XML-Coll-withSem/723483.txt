memoiz tz zeroon softwar perform optim comput memoiz optim techniqu speed comput program function call avoid repeat calcul previouslyprocess input memoiz context purpos speed gain simpl mutuallyrecurs descent pars norvig gener topdown pars algorithm frost hafiz callaghan accommod ambigu leftrecurs polynomi time space cach memoiz refer specif case optim distinguish form cach buffer replac overview term memoiz coin donald michi deriv latin word memorandum rememb carri mean turn function rememb memoiz confus memor share cognat memoiz special mean comput memoiz function rememb correspond set specif input subsequ call rememb input return rememb result recalcul move primari cost call paramet call function paramet set rememb associ fixeds set control replac algorithm fix set depend natur function function memoiz referenti transpar call function exact replac function call return special case except restrict exist lookup tabl memoiz tabl implement memoiz differ pure tabl lookup tabl memoiz popul transpar asneed basi memoiz lower function time cost exchang space cost memoiz function optim speed exchang higher comput memori space timespac cost algorithm specif comput comput complex function comput complex time time execut space tradeoff occur space speed gain differ optim involv timespac tradeoff strength reduct memoiz runtim compil time optim strength reduct replac expens oper multipl expens oper addit save highli nonport machin memoiz machineindepend strategi consid pseudocod function calcul factori function factori nonneg integ return convent return factorialn time recurs invok factori paramet function integ ge final result function factori invari invok factori result will assign nonmemo version natur recurs algorithm involv requir invoc factori arriv result invoc turn associ cost time take function return comput depend machin cost sum cost set function call stack frame cost compar cost subtract cost set recurs call stack frame cost multipli result recurs call factori cost store return result call context nonmemo implement toplevel call factori includ cumul cost step proport initi memoiz version factori function function factori nonneg integ alloc temporari integ variabl lookupt return lookuptablevalueforn return convent factorialn time recurs invok factori paramet store lookupt nth slot rememb result return function memoiz version lookupt assum persist storag space associ array key lookup tabl will space comput memori time requir call factori repeatedli second call function paramet trade memori requir store lookup tabl exampl factori invok invok equal return valu will memoiz factori will call recurs valu return valu will store call number greater recurs call will will store previou call memoiz allow function timeeffici call eventu speed consider automat memoiz memoiz function intern explicitli comput programm memoiz version factori implement referenti transpar function automat memoiz extern techniqu employ norvig applic common lisp languag paper demonstr automat memoiz program languag applic automat memoiz formal explor studi term rewrit artifici intellig program languag function secondclass object lua firstclass function perl httpperlplovercomminimemoizememoizehtml automat memoiz implement replac runtim function calcul calcul set paramet function valueforfunctionobject replac gener wrap referenti transpar function consid pseudocod assum function firstclass valu function memoizedcal function object paramet attach array valu alloc associ array call valu attach valu fvaluesargu empti fvaluesargu fargument return fvaluesargu function order call automat memoiz version factori strategi call factori directli code invok memoizedcallfactorialn call check holder array alloc store attach array entri exist posit valuesargu argument key associ array real call factori suppli argument final entri array key posit return caller strategi requir explicit wrap call function memoiz languag allow closur memoiz effect implicitli functor factori return wrap memoiz function object pseudocod express function constructmemoizedfunctor function object paramet alloc function object call memoizedvers memoizedversionargu attach array valu refer comput sciencethi object alloc associ array call valu attach valu selfvaluesargu empti selfvaluesargu fargument return selfvaluesargu return memoizedvers function call factori function object memfact creat memfact constructmemoizedfunctorfactori exampl assum function factori defin call constructmemoizedfunctor point forward memfactn call factori desir languag lua sophist techniqu exist allow function replac function permit factori constructmemoizedfunctorfactori essenti techniqu involv attach origin function object creat functor forward call origin function memoiz alia call actual function requir avoid endless recurs illustr function constructmemoizedfunctor function object paramet alloc function object call memoizedvers memoizedversionargu attach array valu refer comput sciencethi object alloc associ array call valu attach valu alloc function object call alia attach alia abil invok indirectli selfalia selfvaluesargu empti selfvaluesargu selfaliasargu direct call return selfvaluesargu return memoizedvers function note step implicitli manag implement languag provid illustr parser topdown parser pars ambigu input respect ambigu cfg exponenti number step respect length input altern cfg order produc pars tree eventu requir exponenti memori space memoiz explor pars strategi norvig demonstr algorithm dynam program stateset earley algorithm tabl cyk algorithm cock younger kasami gener introduc automat memoiz simpl backtrack recurs descent parser solv problem exponenti time complex basic idea norvig approach parser appli input result store memot subsequ reus parser reappli input richard frost memoiz reduc exponenti time complex parser combin view pure function topdown backtrack pars techniqu basic memoiz parser combin build block construct complex parser execut specif cfg explor context pars johnson drre examin consider depth ford form call packrat pars frost hafiz callaghan describ topdown pars algorithm memoiz refrain redund comput accommod form ambigu cfg polynomi time leftrecurs grammar leftrecurs grammar topdown pars algorithm requir polynomi space exponenti ambigu pars tree compact represent local ambigu group compact represent compar tomita compact represent bottomup pars memoiz limit retriev previouslycomput parser appli input posit repeatedli essenti polynomi time requir special perform addit task memoiz process view wrapper parser execut accommod evergrow direct leftrecurs pars impos depth restrict wrt input length current input posit algorithm memot lookup procedur determin reusabl save result compar save comput context parser current context contextu comparison key accommod indirect hidden leftrecurs perform success lookup memot return complet resultset process return refer actual result eventu speed comput updat memot meoizat process group exponenti ambigu ensur polynomi space requir frost hafiz callaghan describ implement algorithm padl set higherord function call parser combin haskel enabl construct directli execut specif cfg languag processor polynomi algorithm power accommod form ambigu cfg topdown pars vital respect syntax semant analysi natur languag process xsaiga site algorithm implement detail norvig increas power parser memoiz augment parser time complex earley algorithm demonstr case memoiz speed optim johnson drre demonstr nonspe applic memoiz memoiz delay linguist constraint resolut point pars suffici accumul resolv constraint contrast speed optim applic memoiz ford demonstr memoiz guarante pars express grammar pars linear time languag worstcas backtrack behavior consid grammar ab notat note exampl product read product read option grammar gener three variat string xac xbc xbd understood xs consid grammar pars specif topdown leftright pars string xxxxxbd rule will recogn xxxxxb descend recogn descend xs consum recogn return fail recogn claus will descend turn descend recogn xs recurs call return final recogn key concept inher phrase descend process forward fail back retri altern pars backtrack backtrack present opportun memoiz pars consid function ruleacceptssomeinputrul posit input paramet rule rule consider posit offset current consider input input input consider return function ruleacceptssomeinput length input accept rule rule accept input offset string backtrack scenario memoiz pars process rule descend offset memoiz length posit rule fail descend queri posit rule memoiz engin return length save descend carri descend time exampl descent occur allow string xxxxxxxxxxxxxxxxbd fact number xs call recurs descend time xs will descend return ruleacceptssomeinputx xxxxxxxxxxxxxxxxbd will case parser syntact predic memoiz predic pars well reduc construct rule descent parser build pars tree pars memoiz length input match offset rule store subtre gener rule offset input subsequ call rule parser will descend rebuild tree reason memoiz parser algorithm gener call extern code call semant action routin rule match scheme insur rule invok predict order backtrack syntact predic capabl parser grammar will backtrack predic check overhead store rule pars offset input store pars tree pars process implicitli slow parser mitig explicit select rule parser will memoiz comput complex theori algorithm complex strength reduct compil optim replac expens oper equival expens lazi evalu share concept memoiz lookup tabl key data structur memoiz flyweight pattern object program design pattern kind memoiz note refer norvig peter techniqu automat memoiz applic contextfre pars comput linguist march frost richard hafiz rahmatullah callaghan paul modular effici topdown pars ambigu leftrecurs grammar intern workshop pars technolog iwpt aclsigpars june pragu frost richard hafiz rahmatullah callaghan paul parser combin ambigu leftrecurs grammar intern symposium practic aspect declar languag padl acmsigplan volum januari san francisco michi donald memo function machin learn natur hoffman berthold term rewrit share memoz algebra logic program third intern confer proceed kirchner levi ed volterra itali septemb mayfield jame al automat memoiz softwar engin tool realworld ai system tbd frost richard szydlowski barbara memoiz pure function topdown backtrack languag processor sci comput program frost richard memoiz achiev polynomi complex pure function execut specif nondeterminist topdown parser sigplan notic frost richard monad memoiz correctnesspreserv reduct search canadian confer ai johnson mark memoiz topdown pars comput linguist septemb johnson mark drre jochen memoiz coroutin constraint proceed annual meet associ comput linguist cambridg massachusett ford bryan packrat pars practic lineartim algorithm backtrack master thesi massachusett institut technolog septemb tomita masaru effici pars natur languag kluwer boston ma acar umut al select memoiz proceed acm sigplansigact symposium principl program languag orlean louisiana januari extern link exampl memoiz program languag memoiz memoiz small librari written tim bradshaw perform memoiz common lisp marti hall automat memoiz toolkit common lisp memoizepm perl modul implement memoiz function java memoiz exampl java dynam proxi class creat gener memoiz pattern memoiz doesnt support firstclass function toolkit support autom memoiz preprocess tek memoiz open sourc java memoiz annot pluggabl cach implement memoiz rubi modul implement memoiz method python memoiz python exampl memoiz ocaml memoiz implement camlp syntax extens memoiz lua exampl implement gener memoiz function lua memoiz javascript extend function prototyp javascript xsaiga execut specif grammar public topdown pars algorithm support leftrecurs ambigu polynomi time space