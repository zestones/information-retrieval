ip complex tz waltpohl complex class comput complex theori class ip class problem solvabl interact proof system concept interact proof system introduc goldwass al interact proof system consist machin prover present proof string member languag verifi check present proof correct prover assum infinit comput storag verifi probabilist polynomialtim machin access random bit string length polynomi size machin exchang polynomi number pn messag interact complet verifi decid languag chanc error languag bpp ip verifi simpli ignor prover decis formal languag ip rightarrow exist foral rightarrow prv leftrightarrow accept ge frac rightarrow prv leftrightarrow accept le frac arthurmerlin protocol introduc laszlo babai natur number round interact bound constant polynomi goldwass al publiccoin protocol random number verifi provid prover challeng power privatecoin protocol addit round interact requir replic privatecoin protocol prove ip pspace theorem comput complex demonstr interact proof system decid string member languag polynomi time tradit pspace proof exponenti long proof ip pspac order prove ip pspace equal ip subset pspace pspace subset ip equival order demonstr ip subseteq pspace simul interact proof system polynomi space machin prove pspace subseteq ip pspacecomplet languag tqbf ip part proof adapt sipser ip subset pspace languag ip assum input length verifi exchang exactli ppn messag construct machin simul pspace defin machin prv accept max_p prv leftrightarrow accept definit ip prv accept ge frac prv accept le frac calcul polynomi space m_j denot denot sequenc messag m_ ldot m_j exchang prover verifi gener interact start arbitrari messag stream m_j leftrightarrow pwrm_j accept m_j extend messag m_j m_p leq lt vw m_i m_i leq lt odd pw m_i m_i final messag m_p messag histori accept verifi send messag odd prover send messag final messag accept rule ensur messag sequenc valid third ensur messag sequenc lead accept gener earlier definit random string length defin prv leftrightarrow accept start m_j prv leftrightarrow pwrm_j accept defin prv accept start m_j max_p prv leftrightarrow accept start m_j leq leq messag histori m_j induct defin function n_m_j n_m_j begincas m_p reject m_p accept max_m_j n_m_j lt odd wtavg_m_j n_m_j lt endcas term wtavg_m_jn_m_j defin wtavg_m_jn_m_j sum_m_jpr_rvwrm_j pr_r probabl random string length express averag n_m_j weight probabl verifi messag m_j m_ empti messag sequenc will n_m_ comput polynomi space n_m_ prv accept comput n_m_ algorithm recurs calcul valu n_m_j m_j depth recurs polynomi space second requir n_m_ prv accept need determin induct prove leq leq m_j n_m_j prv accept start m_j will induct base case prove will induct base case fairli simpl m_p accept reject m_p accept n_m_p defin prv accept start m_j messag stream indic accept claim true m_p reject argument induct hypothesi assum leq messag sequenc m_j n_m_j prv accept start prove hypothesi messag sequenc m_j m_j messag definit n_m_j n_m_j sum_m_jpr_rvwrm_jm_j n_m_j induct hypothesi equal sum_m_jpr_rvwrm_jm_j prv accept start m_j final definit equal prv accept start m_j odd m_j messag definit n_m_j max_m_j n_m_j induct hypothesi equal max_m_j prv accept start m_j equal prv accept start m_j max_m_j prv accept start m_j leq prv accept start m_j prover righthand side send messag m_j maxim express lefthand side max_m_j prv accept start m_j geq prv accept start m_j prover better send messag hold odd proof ip subseteq pspace complet construct polynomi space machin best prover string languag best prover place prover random input bit set random input bit polynomi space simul interact proof system polynomi space machin ip subseteq pspace desir box pspace subset ip order illustr techniqu will prove pspace subseteq ip will prove weaker theorem proven lund al sat pspace concept proof will extend tqbf pspace tqbf pspacecomplet tqbf ip pspace subseteq ip sat member ip show sat ip sat langl phi rangl mid phi cnfformula exactli satisfi assign note normal definit sat decis problem function arithmet map boolean formula variabl phib_ b_ b_n polynomi p_phix_ x_ x_n p_phi mimic phi p_phi phi true provid variabl p_phi assign boolean valu boolean oper vee wedg neg phi simul p_phi replac oper phi tabl wedg ab vee ab _def neg arithmet rule convert boolean formula phib_ b_ b_n polynomi p_phix_ x_ x_n exampl phi wedg vee neg convert polynomi p_phi wedg vee neg p_phi wedg bc p_phi bc p_phi acabc oper ab ab result polynomi degre bound sum degre polynomi degre variabl length phi finit field order gt demand leq ileq defin function f_i paramet a_ a_iin singl variabl a_iin leq leq a_ a_i f_ia_ a_i sigma _a_i a_n pa_ a_n note f_ number satisfi assign phi f_ void function variabl protocol sat work phase prover chose prime gt comput send f_ verifi check prime greater max f_ phase send coeffici f_z polynomi verifi degre f_ f_ f_ f_ reject send random number r_ phase send coeffici f_ir_ r_i polynomi verifi degre f_i f_ir_ r_i f_ir_ r_i f_ir_ r_i reject send random number r_i phase evalu pr_ r_n compar f_nr_ r_n equal accept reject note publiccoin algorithm phi satisfi assign clearli will accept phi satisfi assign assum prover tild convinc phi satisfi assign low probabl prevent reject phase tild send incorrect tild f_ phase tild send incorrect polynomi tild f_ properti tild f_tild f_ tild f_ choos random r_ send prtild f_r_ f_r_ lt polynomi singl variabl degre root evalu polynomi singl variabl degre equal place gt chanc r_ valu nn lt nn gt leq nn leq gener idea phase leq leq tild f_ir_ r_i notf_ir_ r_i r_i chosen randomli prtild fr_ r_i f_ir_ r_i leq phase probabl tild lucki select stage conveni r_i prover verifi accept probabl greater definit verifi oper probabilist polynomi time sat ip tqbf member ip order pspace subset ip choos pspacecomplet problem ip clear pspace subseteq ip proof techniqu demonstr credit adi shamir tqbf pspacecomplet psi quantifi boolean express psi q_ x_ q_x_q_mx_mphi phi cnf formula q_i quantifi exist foral f_i previou proof includ quantifi f_ia_ a_i begincas f_ia_ a_a_m q_ix_iq_mx_mphia_a_a_iistru endcas phia_a_a_i phi a_ a_i substitut x_ x_i f_ truth psi order arithmet psi rule q_i foral f_ia_a_a_i f_ia_a_a_icdot f_ia_a_a_i q_i exist f_ia_a_a_i f_ia_a_a_i f_ia_a_a_i defin xy method describ sat face problem f_i degre polynomi doubl quantifi order prevent introduc reduct oper will reduc degre polynomi chang behavior boolean input arithmet psi q_ x_ q_x_q_mx_mphi introduc express psi q_ r_x_ q_ r_x_q_m r_x_mphi written psi s_ y_ s_ y_s_m y_mphi s_i foral exist y_i x_x_x_m leq defin function f_i defin f_kx_x_x_m polynomi px_x_x_m arithmet phi order degre polynomi low defin f_i term f_i s_i foral f_ia_a_a_i f_ia_a_a_icdot f_ia_a_a_i s_i exist f_ia_a_a_i f_ia_a_a_i f_ia_a_a_i s_i f_ia_a_a_ia af_ia_a_a_i f_ia_a_a_i reduct oper doesnt chang degre polynomi r_x oper doesnt chang function boolean input f_ truth psi r_x produc result linear q_ix_i add r_x_r_x_i psi order reduc degre arithmet q_i describ protocol length psi arithmet oper protocol field size length psi phase rightarrow send f_ check f_ reject phase rightarrow send f_z coeffici evalu f_ f_ check polynomi degre ident true f_ begincas f_cdot f_ foral f_ f_ exist endcas f_ rf_ rf_ fail reject phase rightarrow send f_ir_r_r_iz polynomi r_ denot set random valu r_r_r_i coeffici evalu f_ir_r_r_i f_ir_r_r_i check polynomi degre ident true f_ir_r_r_i f_ir_r_r_icdot f_ir_r_r_i foral f_ir_r_r_i f_ir_r_r_i exist f_ir_r rf_ir_r_r_i rf_ir_r_r_i rif fail reject rightarrow pick random send sr replac previou goto phase persuad f_ir_r correct phase evalu pr_r_r_m check pr_r_r_m f_kr_r_r_m equal accept reject protocol descript psi true will accept protocol likewis tildep malici prover lie psi fals tildep will lie phase send f_ phase incorrect f_ir_ f_ir_ f_ir_ will incorrect probabl tildep lucki random degre polynomi divid field size nn protocol run phase probabl tildep lucki phase leq fracn tildep lucki will reject phase ip subseteq pspace pspace subseteq ip conclud ip pspace desir ip algorithm publiccoin reduct pspace ip properti box variant number variant ip modifi definit interact proof system summar wellknown mip main articl interact proof systemmip goldwass al creat power interact proof system base ip call mip independ prover prover commun verifi begun send messag easier crimin lie partner interrog separ room consider easier detect malici prover trick verifi prover doublecheck fact help babai fortnow lund mip nexptim class problem solvabl nondeterminist machin exponenti time larg class languag np zeroknowledg proof mip system addit assumpt ip assum exist oneway function ipp ipp unbound ip variant ip replac bpp verifi verifi precis modifi complet sound condit complet string languag honest verifi will convinc fact honest prover probabl sound string languag prover convinc honest verifi languag probabl ipp equal pspace ipp protocol behav differ ip respect oracl ipppspac respect oracl ip ne pspace respect oracl qip qip version ip replac bpp verifi bqp verifi bqp class problem solvabl quantum comput polynomi time messag compos qubit qip strictli ip quantum comput add power interact proof qip qip three round qip contain exptim compip ipp qip power verifi compip system competit ip proof system weaken complet condit weaken prover complet string languag honest verifi will convinc fact honest prover probabl prover will probabilist polynomi time access oracl languag essenti prover bpp machin access oracl languag complet case sound case concept languag compip interact prove sens easi decid oracl prover easili solv problem limit power difficult convinc verifi fact compip isnt believ np hand system solv problem believ hard easili solv npcomplet problem selfreduc addit earlier proof graph nonisomorph ip compip hard oper prover isomorph test oracl solv quadrat nonresiduos graph isomorph compip note quadrat nonresiduos qnr easier problem graph isomorph qnr intersect coup addit sourc babai trade group theori random proceed acm symposium theori comput acm york shafi goldwass silvio micali charl rackoff knowledg complex interact proofsystem proceed acm symposium theori comput provid rhode island extend abstract shafi goldwass michael sipser privat coin versu public coin interact proof system proceed annual acm symposium theori comput acm york lund fortnow karloff nisan algebra method interact proof system proceed st symposium foundat comput scienc ieee york adi shamir ip pspace journal acm volum issu octob alexand shen ippspac simplifi proof jacm sipser michael introduct theori comput boston pg complex zoo ip mip ipp qip qip compip frip chang chor ode goldreich hartmani hstad ranjan rohatgi random oracl hypothesi fals journal comput system scienc watrou pspace constantround quantum interact proof system proceed ieee foc kitaev watrou parallel amplif exponenti time simul quantum interact proof system proceed acm stoc shafi goldwass mihir bellar complex decis versu search siam journal comput volum februari cai jy threlfal ra note quadrat residuos process letter complex class np conp npc conpc nphard pc nl nc pc pspace pspacec exptim nexptim expspac exptim pr core rec corec bqp bpp rp zpp pcp ip ph