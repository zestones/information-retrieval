process manag comput tz una smith process comput oper system technolog process manag integr modern day oper system os os alloc resourc process enabl process share exchang protect resourc process process enabl synchronis process meet requir os maintain data structur process describ resourc ownership process enabl os exert control process multiprogram modern oper system instanc program load memori time exampl user execut program user separ copi program load memori program copi load memori user share access execut programcod program reentrant processor instant execut instruct program process sustain period time assign process processor interv remaind temporarili inact number process execut period time time call concurr execut multiprogram multitask os system execut process concurr multiprogram requir processor alloc process period time dealloc appropri moment processor dealloc execut process restart easili way os regain control processor program execut order os perform dealloc alloc process issu system call call softwar interrupt exampl io request occur request access file hard disk hardwar interrupt occur exampl key press keyboard timer run preemptiv multitask stop process start restart process call context switch context chang modern oper system process consist subprocess introduc concept thread thread view subprocess separ independ sequenc execut code process thread increasingli design distribut clientserv system softwar multiprocessor system multiprogram increas effici common trait observ process associ comput program altern cpu cycl io cycl portion time requir cpu cycl process execut occupi cpu time requir io cycl process processor wait perform inputoutput perform inputoutput exampl read write file disk prior advent multiprogram comput oper singleus system user system awar time comput alloc singl user processor idl user enter debug program exampl comput scientist observ perform machin improv let process processor process wait inputoutput uniprogram system user execut program individu execut time tn total time tuni servic process consecut user tuni tn process consum cpu cycl io cycl time process cpu small fraction total execut time process process ti processor ti execut ti processor time process spend cpu ti execut total execut time process time cpu cycl io cycl carri execut complet process fact sum processor time process rare exce small fraction time execut process sum_jn t_j mathrmprocessor lt t_i mathrmexecut uniprogram system processor lay idl consider proport time overcom ineffici multiprogram implement modern oper system linux unix microsoft window enabl processor switch process involv io phase execut process time singl job runtim total time servic user multiprogram system reduc tmulti maxt tn process creation process current manag os build data structur call process control block pcb track process memori address space alloc process action constitut creation process common event lead creation process batch job interact logon creat os spawn exist process parentchild process termin reason process termin batch job issu halt instruct user log process execut servic request termin error fault condit normal complet time limit exceed memori unavail bound violat exampl attempt access nonexist element element array protect error exampl attempt write readonli file arithmet error exampl attempt divis time overrun exampl process wait longer maximum event io failur invalid instruct exampl process execut data text privileg instruct data misus oper system intervent exampl resolv deadlock parent termin child process termin cascad termin parent request twostat process manag model oper system princip respons control execut process includ determin interleav pattern execut alloc resourc process design os describ behaviour process exhibit simplest model base fact process execut processor process consid run run oper system creat process process initi label run queue system run process portion exist main memori wait queue opportun execut period time current run process will interrupt move run run make processor process dispatch portion os will select queue run process wait process transfer processor chosen process relabel run run execut begun process resum process interrupt earlier time model identifi design element os repres track process process queu run process threestat process manag model twostat process manag model perfectli valid design oper system absenc block processor lie idl activ process chang cpu cycl io cycl design effici processor threestat process manag model design overcom problem introduc call block describ process wait io event place case io event devic signal process three model run process current execut readi process queu prepar execut opportun block process execut event occur complet io oper instant process three singl processor comput process run instant process readi block will associ queue process process enter system initi readi process enter run readi process leav system run three process occupi space main memori reason transit obviou clear run readi common reason transit run process reach maximum allow time uninterrupt execut timeout occur reason imposit prioriti level determin schedul polici low level schedul arriv higher prioriti process readi run block process block request wait request os form system call call run process function os code exampl request file disk save code data memori file disk fivest process manag model three model suffici describ behavior process event extend model allow event sophist design portion hard disk emul main memori call virtual memori requir addit describ process suspend main memori virtual memori disk cours process futur time resum transfer main memori medium level schedul control event process suspend run readi block rise readi suspend block suspend run process suspend readi suspend block process suspend block suspend process suspend number reason aris process swap memori memori manag system order free memori process common reason process suspend suspend execut debug program system monitor process fivest process manag model consid transit describ section block block suspend process run requir memori block process swap memori disk transit block process readi process os determin readi process dispatch requir main memori maintain adequ perform block suspend readi suspend process block suspend move readi suspend event wait occur note requir concern suspend process access os readi suspend readi readi process main memori os will bring continu execut addit case process readi suspend higher prioriti process readi case os design dictat higher prioriti process minimis swap readi readi suspend os design prefer suspend block process readi readi process execut cpu block process main memori space execut wait event occur suspend readi process free larg block main memori final os choos suspend lowerprior readi process higherprior block process believ block process will readi process descript control process system repres data structur call process control block pcb process descriptor linux perform function travel passport pcb basic job includ go process complet store spent resourc process identif process uniqu identifi user identif pointer connect descriptor process statu indic current statu process readi run block readi suspend block suspend process need indic current job account bill purpos perform measur indic kind resourc process long processor mode contemporari processor incorpor mode bit defin execut capabl program processor bit set kernel mode user mode kernel mode commonli refer supervisor mode monitor mode ring kernel mode processor execut instruct hardwar repertoir user mode execut subset instruct instruct execut kernel mode call kernel privileg protect instruct distinguish user mode instruct exampl io instruct privileg applic program execut user mode perform io request os perform io behalf system logic extend mode bit defin area memori processor kernel mode versu user mode mode bit set kernel mode process execut processor access kernel user partit memori user mode set process refer user memori space frequent refer class memori user space system space kernel supervisor protect space gener mode bit extend oper system protect right mode bit set user mode trap instruct call supervisor call instruct instruct set mode bit branch fix locat system space system code load system space system code invok trap os complet supervisor call reset mode bit user mode prior return kernel concept part os critic correct oper execut kernel mode softwar gener system softwar applic program execut user mode fundament distinct irrefut distinct oper system system softwar system execut kernel supervisor call kernel nucleu oper system kernel oper trust softwar mean design implement intend implement protect mechan covertli chang action untrust softwar execut user space extens os execut user mode os reli correct part system softwar correct oper os fundament design decis function incorpor os implement kernel implement kernel will execut kernel supervisor space access part kernel will trust softwar part kernel function implement execut user mode will access kernel data structur advantag will requir limit effort invok function kernelimpl function easi implement trap mechan authent time call expens kernel code run fast larg perform overhead actual call subtl point request system servic techniqu program execut user mode request kernel servic system call messag pass oper system design facil assum user process wish invok target system function system call approach user process trap instruct idea system call appear ordinari procedur call applic program os librari user function name correspond actual system call stub function trap os function applic program call stub execut trap instruct switch cpu kernel mode branch indirectli os tabl entri point function invok function complet switch processor user mode return control user process simul normal procedur return messag pass approach user process construct messag describ desir servic trust send function pass messag trust os process send function serv purpos trap care check messag switch processor kernel mode deliv messag process implement target function user process wait result servic request messag receiv oper os process complet oper send messag user process distinct approach consequ rel independ os behavior applic process behavior perform rule thumb oper system base system call interfac effici requir messag exchang distinct process case system call implement trap instruct trap expens perform effici messag pass approach gener higher cost associ process multiplex messag format messag copi system call approach interest properti os process process execut user mode chang kernel mode execut kernel code switch user mode return os call hand os design set separ process easier design control machin special situat kernel simpli collect function execut user process kernel mode procedurebas oper system find includ system process call daemon unix handl situat machin idl schedul handl network sourc oper system incorpor window unix colin ritchi isbn oper system william stall prentic hall edit multiprogram process descript control oper system modern perspect gari nutt addison wesley edit process manag model schedul unix system releas modern oper system andrew tannenbaum prentic hall edit oper system concept silberschatz galvin gagn john wiley son edit extern link stuff work oper system gener histori timelin develop list kernel gener microkernel nanokernel type monolith hybrid exokernel compon kernel space loadabl kernel modul devic driver user space userland process manag process multiprogram interrupt mode protect mode supervisor mode comput multitask schedul context switch cooper multitask preemptiv multitask cpu mode thread comput scienc memori manag memori protect segment page memori manag unit segment fault gener protect fault exampl amigao beo ibm os msdo window linux unix opensolari mac os reacto miscellan concept boot loader pxe api virtual file system virtual tape librari comput network gui hal