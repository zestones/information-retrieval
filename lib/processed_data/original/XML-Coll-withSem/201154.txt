divid conquer algorithm tz exciri wikipedia articl incorpor text public domain work unit govern optim algorithm algorithm oper comput scienc divid conquer algorithm design paradigm work recurs break problem subproblem type simpl solv directli solut subproblem combin solut origin problem divid conquer algorithm close tie type recurr relat function data question data divid smaller portion result calcul techniqu basi effici algorithm kind problem sort quicksort merg sort discret fourier transform fft applic numer algorithm commonli binari split histori promin earli propos core idea divid conquer algorithm anatolii karatsuba algorithm multipli ndigit number algorithm complex onlog_ algorithm karatsuba algorithm disprov andrey kolmogorov conjectur fastest multipl algorithm kolmogorov work karatsuba discoveri help launch studi perform algorithm idea earlier work gauss descript cooleytukey fft algorithm work predat modern complex analysi gauss analyz oper count quantit idea focus logic proof algorithm design principl mathemat induct implement divideandconqu algorithm natur implement recurs procedur case partial subproblem lead current solv implicitli store procedur call stack solut implement nonrecurs algorithm store partial subproblem explicit data structur stack queue prioriti queue approach allow freedom choic subproblem solv featur applic breadthfirst recurs branch bound method function optim variat decreas conquer variat divid conquer call decreas conquer solut problem depend subproblem advantag treat variant separ problem solv subproblem simpler conquer strategi gener solv tail recurs analysi problem simpler divid conquer find largest element list number algorithm largestnumb input nonempti list number output largest number list comment divid conquer lsize return lfront largest largestnumberlfrontlmid largest largestnumberlmidlback largest gt largest largest largest largest largest return largest algorithm largestnumb input nonempti list number output largest number list comment decreas conquer lsize return lfront lsize largest largestnumberlfrontllast largest lbackthen largest lbackreturn largest find maximum solv decreas problem element pass popular exampl decreas conquer binari search algorithm problem size will cut half decreas phase complet faster divid marriag conquest divid marriag conquest refer algorithm base divid conquer paradigm solut subproblem gener recurs combin solut origin problem exampl sort algorithm merg sublist sort advantag solv difficult problem divid conquer power tool solv conceptu difficult problem classic tower hanoi puzzl requir break problem subproblem solv trivial case combin subproblem origin problem problem paradigm offer simpl solut divid problem subproblem subproblem combin major difficulti design algorithm algorithm effici divid conquer natur design effici algorithm exampl work split problem combin partial solut proport problem size bound number subproblem size np stage base case requir constantbound time divideandconqu algorithm will log complex problem sort fft reduc complex gener approach design effici algorithm parallel divid conquer algorithm natur adapt execut multiprocessor machin sharedmemori system commun data processor plan advanc distinct subproblem execut processor memori access divideandconqu algorithm natur tend effici memori cach reason subproblem small subproblem principl solv cach access slower main memori algorithm design exploit cach call cach oblivi cach size explicit paramet algorithm design algorithm sort fft matrix multipl optim cach oblivi algorithmsthey cach provabl optim asymptot sens cach size contrast tradit approach exploit cach block problem explicitli divid chunk appropri sizethi cach optim algorithm tune specif cach size machin advantag exist hierarch storag system numa virtual memori well multipl level cach subproblem small solv level hierarchi access higher slower level kind asymptot optim describ analog big notat ignor constant factor addit machinecachespecif tune gener requir achiev optim absolut sens disadvantag commonli argu disadvantag divideandconqu approach recurs slow overhead repeat subroutin call store call stack point recurs outweigh advantag approach depend implement style larg recurs base case overhead recurs neglig problem problem divideandconqu approach simpl problem complic iter approach larg base case implement perform reason exampl add number simpl loop add sequenc easier code divideandconqu approach break set number halv add recurs add sum hand compens advantag exampl recurs summat process gener consider accur floatingpoint arithmet simpl loopbas sum problem subproblem overlap case better reus solut overlap subproblem approach commonli memoiz recurs version dynam program mathemat induct master theorem akrabazzi method divid rule polit sociolog binari search algorithm exampl divid conquer algorithm refer karatsuba yu ofman multipl manydigit number automat comput dokladi akad nauk sssr translat physicsdokladi heideman johnson burru gauss histori fast fourier transform ieee assp magazin paul black divid marriag conquest nist dictionari algorithm data structur frigo leiserson prokop cacheoblivi algorithm proc symp foundat comput scienc nichola higham accuraci float point summat siam scientif comput extern link code exampl divid conquer fast power calcul