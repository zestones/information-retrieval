dekker algorithm tz michael slone distribut system concurr control concurr algorithm dekker algorithm concurr program algorithm mutual exclus deriv dutch mathematician dekker allow thread share singleus resourc conflict share memori commun avoid strict altern naiv turntak algorithm mutual exclus algorithm invent introduct process attempt enter critic time algorithm will allow process base turn process critic process will busi wait process exit flag indic intent enter critic turn variabl indic prioriti process pseudocod fals fals turn true true turn turn fals fals turn turn true true critic critic remaind remaind turn turn fals fals process indic intent enter critic test outer loop process flag intent critic enter safe irrespect current turn mutual exclus will guarante process critic set flag impli process will enter loop guarante progress wait will occur process withdrawn intent critic altern processs variabl set loop enter turn variabl will establish permit critic process prioriti will withdraw intent enter critic prioriti inner loop process prioriti will break loop enter critic dekker algorithm guarante mutual exclus freedom deadlock freedom starvat properti hold suppos stuck insid loop forev freedom deadlock eventu will proceed critic set turn turn will remain unchang long doesnt progress eventu will break inner turn loop stuck will set true settl wait fals turn will action loop time enter critic will forc execut action loop will eventu set fals stuck turn loop turn remain time control pass will exit loop enter critic algorithm modifi perform action loop check turn possibl starvat step algorithm note advantag algorithm doesnt requir special testandset atom readmodifywrit instruct highli portabl languag machin architectur disadvantag limit process busi wait process suspens busi wait suggest process spend minimum time insid critic modern oper system provid mutual exclus primit gener flexibl dekker algorithm absenc actual content process entri exit critic extrem effici dekker algorithm modern cpu execut instruct outoford fashion algorithm wont work smp machin equip cpu memori barrier addit optim compil perform transform will algorithm fail platform languag legal compil detect flag variabl access loop remov write variabl loop process call loopinvari code motion compil detect turn variabl modifi inner loop perform transform potenti infinit loop transform perform algorithm will fail architectur allevi problem volatil variabl mark modifi scope current execut context exampl java annot variabl volatil note cc volatil attribut guarante compil gener code proper order includ memori barrier guarante inord execut code peterson algorithm lamport bakeri algorithm refer