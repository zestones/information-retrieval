ibm basic assembl languag tz gimmebot assembl languag ibm softwar bal basic assembl languag lowlevel languag ibm mainfram earliest seri system zseri earliest version provid system latest version ibm high level assembl hlasm programm util famili assembl refer alc assembl languag common simpli assembl gener characterist architectur ibm mainfram form year includ system system xa esa zarchitectur architectur retain compat featur predecessor bal nativ instruct set machin close hardwar typic programm instruct set consist lowlevel oper support hardwar load copi memori regist store st copi regist memori compar compar regist memori shift sllsrl move bit regist left execut channel program excp perform io oper read data disk tape oper system extrem simplic oper program written assembl will longer harder read equival program cobol fortran speed handcod assembl program felt drawback advent optim compil mainfram advanc assembl lost appeal ibm continu upgrad assembl speed fine control paramount small exampl fragment logic sex add male add femal perform assembl cli sexm male bne is_fem branch male load current male regist la add prexa max bit st male store result go_on finish portion is_fem equ label femal male load current femal la add prexa max bit st femal store go_on equ rest program male dc defin bit memori locat initi femal dc ubiquit hello program execut ibm oper system os mv display hello oper consol hello csect program hello regist point entri opsi caller assembl regist pgm base stm save regist caller save area lr set base regist program entri point address la save point save area st set forward chain st set chain lr switch save area housekeep program wto hello write oper oper system macro point callersprovid save area lm restor regist entri br return caller save ds defin fullword call hello program note wto assembl macro gener oper system call save regist restor return small program usabl batch program invok directli oper system job control languag jcl exec pgmhello altern call subroutin program call hello type instruct three main type instruct sourc code program written assembl machin instruct mnemon languag heart assembl program understand instruct case onetoon relationship machin instruct full mnemon instruct set describ principl oper manual processor gener syntax instruct operand fairli straightforward target instruct appear sourc algol program blank comment follow start asterisk consid entir comment exampl comment ziggi load fullword integ store locat label ziggi gener regist sla shift gener regist left bit mvc targetsourc move charact memori locat sourc target ap countp add memori locat count pack decim format uncondit branch label equ label clc targetcaddress compar memori locat target string address branch equal program label assembl instruct assembl instruct programm instanc csect start code dc defin constant object code macro condit assembl programm group instruct macro add librari invok program paramet preprocessor facil languag macro includ condit assembl instruct aif construct gener code chosen paramet oper system macro program will requir servic oper system os standard macro request servic analog unix system call instanc mv zo exampl getmain dynam alloc block memori retriev logic record file extern link zo librari high level assembl principl oper left