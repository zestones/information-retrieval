exit oper system tz mon process comput posix standard comput process termin execut make exit system call gener exit multithread environ thread execut stop run oper system reclaim resourc memori file process process dead process termin work unix unixlik oper system process start parent process execut fork system call parent process wait child process termin continu execut fork child process child process termin die call exit abnorm fatal error signal sigterm sigint sigkil exit statu return kernel sigchld signal parent process exit statu retriev parent process oper system allow termin process provid specif exit statu system parent process typic small integ oper system plan allow charact string clean exit oper typic perform cleanup oper process space return control oper system system program languag allow user subroutin regist invok program termin process termin good final step termin primit system exit call invok inform oper system process termin allow reclaim resourc process bypass usual cleanup offer _exit function deriv svr _exit termin current process exampl forkexec routin exec call fail replac child process call atexit routin erron releas resourc belong parent orphan zombi oper system handl child process parent process termin special manner orphan process child special root process wait child process termin likewis strategi deal zombi process child process termin exit statu ignor parent process process child special parent process retriev child exit statu allow oper system complet termin dead process deal special case system process tabl consist exampl program termin return success statu system includ int mainvoid exitexit_success includ int mainvoid return exit_success includ int mainvoid stdexitexit_success return exit_success cobol identif divis programid successprogram procedur divis main move returncod program java public class success public static void mainstr arg systemexit do batch file set errorlevel exit perl binperl exit python usrbinpython rais systemexit unix shell exit do assembl masm tasm model small stack code main proc mov ch servic ch termin error code mov al error code int interrupt do gener interrupt main endp main start main programm prepar int mov ax ch replac error code hex linux assembl nasm mov al function exit mov ebx return code int interrupt linux child process execut exit command exit statu fork kill command orphan process process parent process sigchld task thread wait extern link exit normal process termin linux man