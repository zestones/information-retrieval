amdahl law tz ryankindelan parallel comput rule thumb speedup program multipl processor parallel comput limit sequenti fraction program exampl program parallel theoret maximum speedup parallel comput diagram matter processor amdahl law amdahl argument name comput architect gene amdahl find maximum expect improv system system improv parallel comput predict theoret maximum speedup multipl processor speedup program multipl processor parallel comput limit time need sequenti fraction program exampl program hour singl processor core portion hour parallel remain promis portion hour parallel processor devot parallel execut program minim execut time critic hour speed limit diagram descript amdahl law model relationship expect speedup parallel implement algorithm rel serial algorithm assumpt problem size remain parallel exampl problem size parallel implement algorithm algorithm oper arbitrarili fast remain oper paralleliz amdahl law maximum speedup parallel version time faster nonparallel implement technic law concern speedup achiev improv comput proport comput improv speedup exampl improv speed comput will improv portion fast will amdahl law speedup appli improv will frac fracp formula deriv assum run time comput unit time run time comput will length time unimprov fraction take minu length time improv fraction take length time improv comput length improv part run time divid speedup make length time improv ps final speedup comput divid run time run time formula exampl task split part add sped sped sped sped formula ps ps ps ps find run time origin run time speed boost doubl origin speed formula ps ps ps ps minu notic speedup dont speed boost run time half task sped sped parallel case parallel amdahl law proport program parallel benefit parallel minu proport parallel remain serial maximum speedup achiev processor fracp fracpn limit infin maximum speedup practic performancepric fall rapidli increas small compon minu exampl minu problem sped maximum factor matter larg reason parallel comput small number processor problem high valu socal embarrassingli parallel problem great craft parallel program consist attempt reduc smallest relat law diminish return amdahl law conflat law diminish return special case appli amdahl law demonstr law diminish return pick optim term achiev speedup improv will monoton decreas improv improv pick nonoptim improv suboptim compon move improv optim improv increas return consid instanc illustr pick work find increas return work improv will find diminish return strictli speak optim case appropri demonstr law diminish return note ration improv system order nonoptim sens improv difficult consum develop time amdahl law repres law diminish return consid sort return ad processor machin run fixeds comput will processor capac processor add system will add usabl power previou time doubl number processor speedup ratio will diminish total throughput head limit frac analysi neglect potenti bottleneck memori bandwidth io bandwidth scale number processor account bottleneck tend demonstr diminish return ad processor speedup sequenti program assum task independ part take roughli time comput work hard time faster reduc time comput contrast perform work fast will comput faster optim bigger speedup versu maximum speedup improv sequenti program sped time max speedup le fracp lt lt fraction time improv spent improv exampl blue time faster t_n red second t_i blue second t_n t_n t_i max speedup le frac red fast t_n blue second t_i red second t_n t_n t_i max speedup le frac better make faster better make time faster improv factor will result increas program speed improv factor presum requir effort will achiev speedup limit amdahl law theoret maximum speedup processor linear speedup uncommon observ speedup machin processor practic super linear speedup reason cach aggreg parallel comput number processor chang size accumul cach processor larger accumul cach size entir data set fit cach dramat reduc memori access time produc addit speedup aris pure comput amdahl law doesnt account problem size scale increas number processor typic reduc rel amount nonparalleliz task amdahl rule thumb amdahl rule thumb byte memori byte second io requir instruct second support comput titl amdahl law speedup amdahl corpor ninetynineti rule gustafson law karpflatt metric brookss law moor law note rodger refer gene amdahl httpwwwinsteecsberkeleyedunpaperamdahlpdf valid singl processor approach achiev largescal comput capabl afip confer proceed note gene amdahl approv complet text usenet compsyssup news group faq month rodger david improv multiprocessor system design acm sigarch comput architectur news archiv volum issu june tabl content special issu proceed annual intern symposium comput architectur isca year public issn publish intern symposium comput architectur proceed annual intern symposium comput architectur boston massachusett unit extern link gene amdahl oral histori interview charl babbag institut univers minnesota minneapoli reevalu amdahl law reevalu amdahl law gustafson law simpl interact amdahl law calcul amdahl law joel klein wolfram demonstr project amdahl law multicor era blog post parallel parallel computingtop gener highperform comput parallel bitlevel parallel instruct level parallel data parallel task parallel thread superthread hyperthread theori speedup amdahl law flynn taxonomi sisd bull simd bull misd bull mimd cost effici gustafson law karpflatt metric parallel slowdown element process thread fiber parallel random access machin coordin multiprocess multithread multitask memori coher cach coher barrier synchron distribut comput grid comput program program model implicit parallel explicit parallel hardwar comput cluster beowulf symmetr multiprocess nonuniform memori access cach memori architectur asymmetr multiprocess simultan multithread share memori distribut memori massiv parallel process superscalar process vector process supercomput stream process gpgpu softwar distribut share memori applic checkpoint warewulf api posix thread openmp messag pass interfac mpi upc intel thread build block boostthread problem embarrassingli parallel grand challeng softwar lockout