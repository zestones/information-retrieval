selfmodifi code tz sarrazip program paradigm articl weasel comput scienc selfmodifi code code alter instruct intent execut selfmodifi code straightforward write assembl languag account cpu cach support high level languag interpret snobol lisp program languag alter verb cobol difficult implement compil compil clipper spitbol fair attempt cobol encourag batch program techniqu selfmodifi code script languag perl python interpret program gener code execut variabl perform write file run script languag interpret usag selfmodifi code purpos semiautomat optim depend loop runtim code gener special algorithm runtim loadtim popular exampl domain realtim graphic gener sort util prepar code perform key comparison describ specif invoc alter inlin object simul highlevel construct closur patch subroutin address call load time dynam librari invoc patch subroutin intern refer paramet actual address regard selfmodifi code case terminolog evolutionari comput system genet program hide code prevent revers engin disassembl debugg hide code evad detect virusspywar scan softwar fill memori architectur roll pattern repeat opcod eras program data burnin hardwar compress code decompress execut runtim memori disk space limit limit instruct set leav option selfmodifi code achiev function exampl instruct set comput machin subtractandbranchifneg instruct indirect copi equival program languag selfmodifi code alter instruct faulttoler second third type kind highlevel languag lisp optim statedepend loop pseudocod exampl repeat time increas decreas selfmodifi code case simpli matter rewrit loop repeat time increas switch replac opcod increas opcod decreas note replac opcod easili written xor var address opcodeofinc xor opcodeofdec choos solut will depend cours frequenc chang attitud amboxcont style articl vagu phrase accompani statement selfmodifi code featur delay codeedit bad practic code harder read maintain earli day comput selfmodifi code order reduc usag memori extrem limit didnt pose problem implement subroutin call return instruct set provid simpl branch skip instruct vari control flow applic relev ultra risc architectur theoret exampl instruct set comput donald knuth mix architectur selfmodifi code implement subroutin call critic system complex peopl fulli manag real time internet electr distribut network routin reli selfmodifi behavior selfmodifi code order function accept camouflag selfmodifi code hide copi protect instruct disk base program platform ibm pc appl ii exampl ibm pc compat floppi disk drive access instruct int appear execut program imag written execut memori imag program start execut selfmodifi code program reveal presenc comput virus shellcod virus shellcod selfmodifi code combin polymorph code polymorph virus call primit selfmut modifi piec run code attack buffer overflow selfreferenti machin learn system tradit machin learn system fix preprogram learn algorithm adjust paramet jrgen schmidhub publish selfmodifi system abil chang learn algorithm avoid danger catastroph selfrewrit make selfmodif will surviv usergiven fit function error function reward function oper system secur implic selfmodifi code major oper system care remov vulner concern typic program will intent modifi malici chang exploit consequ troubl caus exploit os featur call wx write xor execut develop prohibit program make memori writabl execut system prevent writabl chang execut write permiss remov system provid door sort allow multipl map memori permiss portabl bypass wx creat file permiss map file memori linux undocu sysv share memori flag execut share memori need creat file window vista window xp wx protect name data execut prevent disabl control panel metalevel program modifi behavior chang data store metaprogram polymorph justintim compil justintim compil java net actionscript program languag compil block bytecod pcode machin code suitabl host processor execut fabric bellard tini compil justintimecompilerlibrari tccboot bootload compil load oper system onthefli graphic driver modern gpu perform jitcompil directx opengl glsl geometri fragment shader selfmodifi code distribut multipl processor dsp selfmodifi hardwar cpu architectur emul techniqu jitcompil simul instruct set program languag compil target processor interact cach selfmodifi code architectur coupl data instruct cach arm mip core cach synchron explicitli perform modifi code flush data cach invalid instruct cach modifi memori area case short section selfmodifi code execut slowli modern processor modern processor will block code cach memori time program rewrit rewritten load cach slight delay modifi codelet share cach modifi code case modifi memori address locat byte modifi code cach invalid issu modern processor selfmodifi code faster modif will occur rare case switch insid inner loop modern processor load machin code execut instruct instruct pointer modifi processor will notic execut code modifi prefetch input queue piq pc processor handl selfmodifi code correctli backward compat reason effici henri massalin synthesi kernel synthesi kernel written dr henri massalin phd thesi commonli view mother selfmodifi code massalin tini unix kernel take structur object orient approach selfmodifi code code creat individu quaject filehandl gener code specif task allow synthesi kernel jit interpret appli number optim constant fold common subexpress elimin synthesi kernel extrem fast written entir assembl lack portabl prevent massalin optim idea product kernel structur techniqu suggest captur higher level languag albeit complex exist midlevel languag languag compil allow develop extrem fast oper system applic paul haeberli bruce karsh object margin selfmodifi code optim gener favor reduc develop cost draw parallel heavi religi atmospher italian futurist movement rebel reflect comput scienc selfrepl quin comput refer selfmodifi batch file lar fosdal extern link selfmodifi code linux selfmodifi code synthesi effici implement fundament oper system servic henri massalin phd thesi synthesi kernel futurist program certifi selfmodifi code jrgen schmidhub public selfmodifi code selfreferenti machin learn system pcastl parent childset access syntax tree languag