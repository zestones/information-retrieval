recurs comput scienc tz kernel saunter control flow articl exampl code theoret comput scienc articl exampl scheme code recurs theori program idiom recurs comput scienc think solv problem fact central idea comput scienc solv problem recurs solut depend solut smaller instanc problem power recurs evid lie possibl defin infinit set object finit statement manner infinit number comput describ finit recurs program program explicit repetit highlevel comput program languag support recurs allow function call program text imper languag defin loop construct loop perform repetit action function program languag defin loop construct reli sole recurs repeatedli call code comput theori proven recurs languag mathemat equival imper languag mean solv kind problem typic control structur tree creat logo program languag reli heavili recurs recurs algorithm common method simplif divid problem subproblem typethi dialect comput program techniqu call divid conquer key design algorithm well fundament dynam program virtual program languag today allow direct specif recurs function procedur function call comput languag stackbas architectur languag implement track instanc function architectur call stack method convers recurs function transform iter function stack function evalu comput express term recurs function iter continuationpass style convers recurs function express term iter liter exampl unknown word book reader note current number note stack empti reader word read subject find unknown word number word written top stack point articl read requir explan reader return previou number continu read repeat sequenti remov topmost note stack final reader return origin book recurs approach languag design logic program function program provid recurs repetit directli programm languag gener tail recurs effici iter let programm express repetit structur scheme map term recurs recurs deepli embed theori comput theoret equival recurs function ture machin foundat idea univers modern comput recurs program creat recurs procedur essenti requir defin base case defin rule break complex case base case key recurs procedur recurs call problem domain reduc eventu base case arriv author classifi recurs gener structur distinct base procedur data work data data structur list procedur structur recurs gener recurs wellknown recurs algorithm gener entir piec data data recur htdp design program refer kind gener recurs exampl gener recurs includ gcd quicksort binari search mergesort newton method fractal adapt integr exampl recurs defin procedur gener recurs factori classic exampl recurs procedur function calcul factori integ function definit factn begincas mboxif time factn mboxif gt endcas pseudocod recurs function factori input integ gt output return return factorialn factori recurr relat equat relat term sequenc earlier term recurr relat factori bn bn comput recurr relat exampl implement scheme recurs recurs input integ gt defin fact fact input integ gt int factint return return factn factori function describ recurs make typic loop construct imper program languag pseudocod iter function factori input integ gt output creat variabl call running_tot loop exit loop set running_tot running_tot decrement repeat loop return running_tot factori scheme function program languag defin loop construct reli sole recurs perform loop scheme tailrecurs recurs procedur defin implement factori procedur iter process mean constant space linear time exampl implement scheme iter iter input integ gt defin fact factit defin factit running_tot running_tot factit running_tot int factint int running_tot running_tot running_tot return running_tot fibonacci well recurs sequenc fibonacci number element sequenc function definit fibn begincas mboxif mboxif fibn fibn mboxif gt endcas pseudocod function fib input integ gt return return return fibn fibn fib recurr relat fibonacci bn bn bn comput recurr relat exampl implement scheme integ gt defin fib cond fib fib int fibint return return return fibn fibn implement bad time function execut will function call turn function call bottom exampl tree recurs grow exponenti time linearli space requir greatest common divisor famou recurs function euclidean algorithm comput greatest common divisor integ function definit gcdxi begincas mboxif gcdi remainderxi mboxif gt mbox gt endcas pseudocod recurs function gcd input integ integ gt gt return return gcd remaind xy gcd recurr relat greatest common divisor express remaind gcdxi gcdi gcdx comput recurr relat gcd gcd gcd comput recurr relat gcd gcd gcd gcd exampl implement scheme recurs recurs input integ gt gt defin gcd gcd remaind int gcdint int return return gcdi notic recurs exampl fact tailrecurs equival iter algorithm algorithm explicit iter accumul chain defer oper maintain entir variabl number step grow logarithm number involv pseudocod iter iter function gcd input integ integ gt gt creat variabl call remaind loop exit loop set remaind remaind xy set set remaind repeat loop return gcd int gcdint int int remaind remaind return iter algorithm requir temporari variabl knowledg euclidean algorithm difficult understand process simpl inspect algorithm step tower hanoi main articl tower hanoi full discuss problem descript histori solut main articl refer simpli problem three peg set disk increas size determin minimum optim number step move disk initi posit peg place larger disk top smaller function definit hanoin begincas mboxif hanoin mboxif gt endcas recurr relat hanoi hn hn comput recurr relat hanoi hanoi hanoi hanoi exampl implement scheme program languag program languag input integ gt defin hanoi hanoi input integ gt int hanoiint return return hanoin recurs function explicit solut tower hanoi sequenc reduc explicit formula explicit formula tower hanoi gener hn gt binari search binari search algorithm method search order array singl element cut array half pass trick pick midpoint center array compar data point data search respond three condit data data midpoint greater data search data midpoint data search recurs algorithm pass array creat cut half binari search procedur call recurs time smaller array typic array size adjust manipul algorithm exhibit logarithm order growth essenti divid problem domain half pass exampl implement binari search call binary_search proper initi condit input data array integ sort ascend order tofind integ search count total number element array output result binary_search int searchint data int tofind int count start count top return binary_searchdata tofind count binari search algorithm input data array integ sort ascend order tofind integ search start minimum array maximum array output posit integ tofind array data int binary_searchint data int tofind int start int midpoint int mid start start integ divis condit start gt return datamid tofind return mid datamid gt tofind data greater tofind search lower half return binary_searchdata tofind start mid data tofind search upper half return binary_searchdata tofind mid recurs data structur structur recurs applic recurs comput scienc defin dynam data structur list tree recurs data structur dynam grow theoret infinit size respons runtim requir contrast static array size requir set compil time recurs algorithm appropri underli problem data treat defin recurs term exampl illustr structur recurs term refer fact recurs procedur act data defin recurs long programm deriv templat data definit function employ structur recurs recurs function bodi consum piec compound link list simpl definit link list node notic node defin term element struct node pointer struct node struct node int data struct node pointer struct node list simpli synonym struct node aka syntact sugar typedef struct node list procedur oper list data structur implement natur recurs procedur data structur oper list defin recurs printlist procedur defin walk list list empti null node print data element integ implement list remain unchang printlist procedur void printlistlist lst isemptylst base case printfd lst gtn print integ space printlistlst gtnext recurs call binari tree simpl definit binari tree node node link list defin term recurs selfreferenti pointer left point left subtre point subtre struct node int data struct node left pointer left subtre struct node point subtre tree simpli synonym struct node aka syntact sugar typedef struct node tree oper tree implement recurs note selfreferenc pointer left tree oper will requir recurs call exampl fibonacci function explan void printtreetre isemptyt base case printtreet gtleft left printfd gtn print integ space printtreet gtright exampl illustr inord travers binari tree binari search tree special case binari tree data element node order recurs versu iter factori exampl iter implement faster practic recurs definit euclidean algorithm implement result typic iter function pay functioncal overhead time recurs function overhead high languag note faster implement factori function small integ lookup tabl type problem solut inher recurs track prior exampl tree travers includ ackermann function divideandconqu algorithm quicksort algorithm implement iter help stack stack arguabl nullifi advantag iter solut reason choos iter recurs algorithm today program languag stack space thread space heap recurs algorithm tend requir stack space iter algorithm caveat special case tail recurs tailrecurs function main articl tail recurs tailrecurs function function recurs call buildup defer oper exampl gcd function reshown tailrecurs factori function reshown augment recurs build defer oper perform final recurs call complet compil automat optim tailrecurs call tailrecurs function gcd will execut constant space process gener iter equival imper languag control structur loop tail recurs augment recurs input integ gt gt int gcdint int return return gcdi input integ gt int factint return return factn signific tail recurs make tailrecurs call caller return posit save call stack recurs call return will branch directli save return posit compil support tailrecurs optim tail recurs save space time order function call order call function chang execut function exampl languag function void recursivefunctionint num num printfdn num recursivefunctionnum recursivefunct executionpng function swap line void recursivefunctionint num num recursivefunctionnum printfdn num recursivefunct executionpng direct indirect recurs direct recurs function call indirect recurs exampl function call function function call function function call function long chain branch recurs descent parser mutual recurs anonym recurs recurs function primit recurs function function program kleeneross paradox mccarthi function ackermann function sierpiski curv note refer epp susanna discret mathemat applic graham ronald donald knuth oren patashnik concret mathemat chapter recurr problem wirth niklau algorithm data structur program prenticehal felleisen matthia robert bruce findler matthew flatt shriram krishnamurthi design program introduct comput program cambridg mass mit press gener recurs felleisen matthia develop interact web program jeur johan advanc function program intern school oxford uk springer epp susanna discret mathemat applic brookscol publish compani abelson harold gerald jay sussman structur interpret comput program abelson harold gerald jay sussman structur interpret comput program graham ronald donald knuth oren patashnik concret mathemat chapter tower hanoi epp susanna discret mathemat applic tower hanoi epp susanna discret mathemat applic explicit formula tower hanoi sequenc wirth niklau algorithm data structur program prenticehal felleisen matthia develop interact web program jeur johan advanc function program intern school oxford uk springer extern link harold abelson gerald sussman structur interpret comput program ibm developerwork master recurs program david touretzki common lisp gentl introduct symbol comput matthia felleisen design program introduct comput program recurs primer zeeshan amjad