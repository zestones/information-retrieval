capabilitybas secur tz bjweek comput secur model capabilitybas secur concept design secur comput system capabl system key communic unforg token author refer refer object associ set access right user program capabilitybas oper system capabl access object capabilitybas secur refer principl design user program directli share capabl principl privileg oper system infrastructur transact effici secur oper system implement facil resembl capabl typic provid support allow exchang capabl mutual untrust entiti primari grant distribut access right system capabilitybas system contrast design goal mind capabl discuss confus posix ec capabl coarsegrain privileg transfer process capabl capabilitybas secur capabl achiev object improv system secur place forgeabl refer forgeabl refer exampl path identifi object access right appropri object user program hold refer consequ attempt access referenc object valid oper system typic access control list acl system capabl mere fact user program possess capabl entitl referenc object right capabl theori system capabl remov access control list mechan entiti capabl will capabl typic implement privileg data structur consist specifi access right uniqu identifi object access practic file descriptor tradit oper system access object system capabl typic store oper system list mechan place prevent program directli modifi content capabl forg access right chang object point system base capabilitybas address hardwar support capabl plessey system program possess capabl perform function pass program convert lessprivileg version delet oper system ensur specif oper occur capabl system order maintain integr secur polici introduct capabilitybas secur introduct assum basic knowledg unix system capabl defin protect object refer virtu possess user process grant process capabl interact object way way includ read data associ object modifi object execut data object process conceiv access right capabl logic consist refer uniqu identifi object set right suppos user processs memori space exist string etcpasswd identifi uniqu object system access right capabl suppos valu etcpasswd o_rdwr identifi object set access right capabl user processs possess valu access legitim suppos user program execut statement int fd openetcpasswd o_rdwr variabl fd file descriptor processs file descriptor tabl file descriptor capabl exist processs file descriptor tabl suffici process legitim access object key featur arrang file descriptor tabl kernel memori directli manipul user program share capabl process tradit oper system program commun storag refer exampl path name pass commandlin paramet socket store disk refer capabl valid system central question author refer evalu critic issu process behalf authoritybear entiti suscept program error confus deputi problem frequent secur hole capabilitybas system capabl pass process storag mechan oper system maintain integr capabl oper system implement facil capabl file descriptor file handl exampl unix file descriptor discard close inherit child process process socket obstacl prevent benefit capabilitybas address system realiz tradit oper system environ chief obstacl fact entiti hold capabl process file persist maintain integr secur capabl repres oper system trust user program read capabl tamper object refer access right consequ program wish regain access object referenc disk oper system valid access request access control list mechan mandat novel approach solv problem involv orthogon persist oper system realis flex machin ten system entiti discard capabl invalid requir acllik mechan restor capabl time oper system maintain integr secur capabl contain storag volatil nonvolatil time perform serial task requir user program case oper system user program reliev respons trust reproduc legal capabl valid request access access control mechan posix capabl posix draft specifi concept permiss call capabl posix capabl differ capabl articl posix capabl associ object process cap_net_bind_servic capabl listen tcp port commerci system keyko ero extrem reliabl oper system keyko successor capro ero successor project develop ero code base commerci coyoto ero successor kaneton cambridg cap comput carnegi mellon univers cmmp hydra oper system carnegi mellon univers cm staro ibm system intel iapx plessey system symbian flex microkernel open kernel lab okl nicta sel amoeba distribut oper system refer levi henri capabilitybas comput system digit equip corpor isbn electron version ero project program languag base capabl secur erightsorg mark miller kape yee jonathan shapiro capabl myth demolish technic report srl system laboratori john hopkin univers onlin cambridg cap comput levi current capabilitybas address theodor linden decemb oper system structur support secur reliabl softwar acm comput survey csur issn li gong secur identitybas capabl system sp ieee symposium secur privaci capabilitybas address hardwar implement capabilitybas address implement capabl pdp ibm system support capabilitybas address ero fast capabl system posix capabl linux posix capabl file posix file capabl parcel power root extern link captalk mail list review capabl myth demolish critic refer capabl inform introduct capabl rick smith interview jonathan shapiro design ero capabl theori sound byte histori capabl approach