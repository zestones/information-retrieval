sipserlautemann theorem tz ibanix comput complex theori comput complex theori sipserlautemann theorem sipsergcslautemann theorem bpp boundederror probablist polynomi time contain polynomi time hierarchi sigma cap pi michael sipser bpp contain polynomi time hierarchi pter gc bpp contain sigma cap pi clemen lautemann contribut simpl proof bpp membership sigma cap pi proof michael sipser version proof work loss gener machin sube bpp error le chosen bpp problem amplifi reduc error probabl exponenti basic idea proof defin sigma cap pi sentenc equival state languag defin set transform random variabl input output depend random input well input defin random string produc correct output ax mxr accept key proof note isin ax larg notin ax small bitwis pariti oplu set transform defin ax oplu tr oplu isin ax main lemma proof union small finit number transform will entir space random input string fact sigma sentenc pi sentenc gener true isinl corollari lemma gener idea lemma prove ax cover larg random space exist small set translat will cover entir random space mathemat languag fracaxr gt fracx exist t_t_ldotst_r t_i cup_i ax oplu t_i proof randomli pick tttr cupi ax oplu ti union transform ax foral pr notin pr notin ax oplu t_ cdot pr notin ax oplu t_ cdot pr notin ax oplu t_r le fracx cdot probabl will exist element pr bigvee_i r_i notin le sum_r fracx cdot fracx lt pr ge fracx select t_t_ldotst_r cup_i ax oplu t_i lemma previou lemma ax cover point space small set translat complementari notin small fraction space cover ax set random string caus mxr accept gener small set vector ti cup_i ax oplu t_i set accept random string exclusiveord vector ti fracaxr le frack impli neg exist t_t_t_r corollari corollari lemma result proof express sigma express iff exist t_t_t_r foral bigvee_ le le oplu t_i accept languag exist binari vector random bit vector tm accept random vector oplu ti express sigma existenti univers quantifi bpp isin sigma bpp close complement prove bpp isin sigma cap pi lautemann proof proof lautemann bpp isin sigma trevisan note lemma base definit bpp defin bpp algorithm pr_raxr mboxright answer ge fracm number random bit xo run time xo proof bpp algorithm pr_raxr mboxwrong answer le mn random bit kn repetit accept frackn execut accept defin algorithm knmn random bit pr_raxr mboxwrong answer le ckn find kn kn theta log mn fracckn le fracknmn theorem proof bpp lemma iff exist y_y_m foral bigvee_imaxy_i oplu number random bit input pr_y_y_mexist axy_ oplu zaxy_m oplu le sum_z pr_yy_maxy_ oplu y_m oplu le fracmm lt pr_y_y_m foral bigvee_i axy_i oplu pr_y_y_mexist axy_ oplu zaxy_m oplu y_y_m exist convers suppos notin pr_z left bigvee_i axy_i oplu le sum_i pr_z axy_i oplu le fracm frac pr_zaxy_ oplu zaxy_m oplu pr_z left bigvee_i axy_i oplu ge frac gt bigvee_i axy_i oplu y_y_m refer sipser complex theoret approach random proceed acm symposium theori comput acm press lautemann bpp polynomi hierarchi inf proc lett luca trevisan lectur note univers california berkeley httpwwwcsberkeleyedulucanot