kahan summat algorithm tz stemon numer analysi comput arithmet numer analysi kahan summat algorithm compens summat reduc numer error total ad sequenc finit precis float point number compar obviou approach algorithm attribut william kahan algorithm pseudocod algorithm function kahansuminput var sum input var run compens lost loword bit inputi good sum ala sum big small loword digit lost sum sum recov highord subtract recov low sum algebra bewar eagerli optimis compil time lost low will fresh attempt return sum exampl sixdigit floatingpoint decim arithmet suppos sum attain inputi sixdigit float point number digit lost evalu written assimil recov origin full trail sixdigit arithmet sum digit inputi met sum sum larg highord digit input number accumul step suppos inputi time shortfal previou stage chanc size digit meet meet digit sum round good truncat extract case matter excess will subtract time sum summat perform accumul sum hold sum accumul part assimil sum nudg loword sum time summat proce guard digit better good perform calcul doubl precis input input doubl precis system suppli quadrupl precis input quadrupl precis approach perform summat differ work hope sum larger individu differ valu work suffer truncat altern sort valu pair posit neg valu accumul sum remain close great cost comput effort practic perform summat sort multiprecis arithmet check behaviour method rememb data limit precis digit sixdigit precis sum valid represent sum spuriou implic seventeendigit precis optimis compil optim perform compil attempt spot remov redund code sophist optim perform symbol express simplif code tsum ct sum deduc constant comput loop initialis statement yinputi contract loop yinputi tsum sumt final variabl waystat loop content reduc sumsum inputi entir remov desir featur optimis compil carri analys deduc summat input intend gener code employ maximum precis work will result code ruin algorithm algorithm execut nonmathemat optimis instanc common floatingpoint comput carri machin regist precis higher variabl held main storag ibmpc clone floatingpoint regist hold bit floatingpoint number main storag held bit bit well bit sequenc yinputi tsum ct sum compil unwant mathemat transform notic code statement execut regist hold result store regist organis stack overflow memori result statement refer code arrang fetch memori third statement store valu held precis regist will problem regist main storag equival speed access work algorithm will ruin optimis option help part program will good part program comput languag featur comput languag offer summat featur input apl read input suminput fortran semifunct sum suppli compil intrins implement will best method ala fortran manual hand offer detail intern work result will precis input inspect code gener compaq visual fortran compil simpl usag reveal equival load sum add inputi store sum attempt hold sum regist addit perform precis greater sum will lost result store sum retriev straight summat program languag ccd exist volatil keyword ensur regist writtenread tofrom memori disabl optimis code fail care test scrutini code gener rearrang algorithm select compil option deliv good situat final word manual prepar embed assemblerlik statement ensur gener exactli machin code desir facil offer compil cours invoc util routin written separ machin code refer kahan william jan remark reduc truncat error commun acm doi higham nichola accuraci float point summat siam journal scientif comput doi goldberg david mar comput scientist floatingpoint arithmet acm comput survey doi