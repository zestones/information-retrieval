ibm basic assembl languag gimmebot assembl languag ibm softwar bal basic assembl languag lowlevel languag ibm mainfram earliest seri system zseri earliest version wa provid latest version ibm high level assembl hlasm programm util thi famili assembl refer alc assembl languag common simpli assembl gener characterist architectur ibm mainfram ha mani form year includ xa zarchitectur architectur ha retain compat featur predecessor bal nativ instruct set machin thu close hardwar typic programm instruct set consist lowlevel oper support hardwar load copi valu memori regist store st copi valu regist memori compar compar regist valu valu memori shift sll srl move bit regist left execut channel program excp perform io oper read data disk tape usual oper system extrem simplic oper program written assembl will usual longer harder read equival program cobol fortran speed handcod assembl program wa felt thi drawback advent optim compil mainfram advanc assembl ha lost appeal ibm continu upgrad assembl howev speed veri fine control paramount small exampl follow fragment logic sex add male els add femal perform assembl cli sex male bne is_fem branch male load current valu male regist la add prexa max valu bit st male store result go_on finish thi portion is_fem equ label femal male load current valu femal la add prexa max valu bit st femal store go_on equ rest program male dc defin bit memori locat femal dc follow ubiquit hello program execut ibm oper system os mv display word hello oper consol hello csect thi program hello regist point entri opsi caller assembl regist pgm base stm save regist caller save area lr set base regist program entri point address la save point save area st set forward chain st set chain lr switch save area end housekeep program wto hello write oper oper system macro point callersprovid save area lm restor regist entri br return caller save ds defin fullword call hello thi program note wto assembl macro gener oper system call becaus save regist restor return thi small program usabl batch program invok directli oper system job control languag jcl thi exec pgmhello altern call subroutin program call hello type instruct three main type instruct sourc code program written assembl machin instruct mnemon ani languag heart assembl program understand instruct usual thi case onetoon relationship machin instruct full mnemon instruct set describ principl oper manual processor gener syntax instruct operand fairli straightforward target instruct appear sourc algol program blank ani comment follow start asterisk consid entir comment exampl thi comment ziggi load fullword integ store locat label ziggi gener regist sla shift valu gener regist left bit mvc target sourc move charact memori locat sourc target ap count add valu memori locat count pack decim format uncondit branch label next equ thi label clc target caddress compar memori locat target string address branch equal program label there assembl instruct assembl instruct programm instanc csect start code dc defin constant place object code macro condit assembl programm group instruct togeth macro add librari invok program usual paramet preprocessor facil relat languag macro includ condit assembl instruct aif construct gener differ code accord chosen paramet oper system macro program will requir servic oper system os provid standard macro request servic analog unix system call instanc mv zo exampl getmain dynam alloc block memori get retriev logic record file extern link zo librari high level assembl principl oper left