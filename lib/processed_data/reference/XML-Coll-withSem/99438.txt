extend euclidean algorithm gogo dodo number theoret algorithm articl exampl pseudocod extend euclidean algorithm extens euclidean algorithm find greatest common divisor gcd integ find integ bzout ident ax gcd typic neg extend euclidean algorithm particularli coprim sinc modular multipl invers modulo inform formul algorithm dividend divisor quotient remaind assum reader alreadi familiar euclid algorithm illustr extens euclid algorithm consid comput gcd tabl left notic quotient divis record well alongsid remaind thi case remaind fourth equal indic gcd coprim call rel prime sake simplic exampl chosen coprim pair gener case gcd work similarli method proceed divis algorithm will discuss separ iter method thi method comput express form r_i ax_iby_i remaind step euclidean algorithm modulu written term previou remaind quotient follow r_i r_ left lfloor frac r_ r_ right rfloor cdot r_ substitut thi r_i ax_ by_ left lfloor frac r_ r_ right rfloor cdot ax_ by_ r_i x_ left lfloor frac r_ r_ right rfloor cdot x_ y_ left lfloor frac r_ r_ right rfloor cdot y_ valu initi argument algorithm express nonzero remaind desir result sinc thi method comput everi remaind term desir exampl comput gcd comput proce follow step quotient remaind substitut combin term algorithm read minu time time requir solut minu thi minu multipl invers modulo multipl invers modulo minu time mod time mod recurs method thi method attempt solv origin equat directli reduc dividend divisor gradual substitut trivial valu work backward solut consid origin equat notic equat remain unchang decompos origin dividend term divisor plu remaind regroup term solut equat second work backward find requir nt solut second notic magnitud term decreas henc appli thi eventu reach obvious ha trivial solut work backward gradual find dividend quotient divisor remaind purpos explain thi method full work will repeat step will describ demonstr principl thi method start rewrit tabl divis algorithm focus dividend thi time becaus substitut dividend assum alreadi inde valid solut solv substitut solv substitut tabl method tabl method probabl simplest method carri pencil paper recurs method doe directli requir algebra onli requir work direct main idea equat chain gcd gcd xmod dot gcd sequenc divisor xmod dot exampl sequenc ani element thi chain written linear combin origin notabl element gcd written thi tabl method involv tabl divisor written linear combin algorithm start tabl follow element column tabl will divisor sequenc d_i repres linear combin d_i a_i cdot b_i cdot valu obviou row tabl repres themselv comput d_i ani gt notic d_i d_ mod d_ suppos d_i d_ cdot d_ a_i a_ cdot a_ b_i b_ cdot b_ thi easi verifi algebra simpl substitut actual carri tabl method simpler abov equat indic find third row tabl exampl notic divid goe time plu remaind thi multipli factor thi row valu tabl valu row abov minu time valu immedi abov thi correctli lead cdot cdot cdot cdot repeat thi method find tabl note remaind written tabl multipli factor differ number final valu will solv ax gcd thi method simpl requir onli repeat applic rule leav answer final row tabl backtrack note neg number answer factor thi case will add modulu order work modular invers absolut valu ie return neg number nt flip sign add number work otherwis will modular invers yield neg formal descript algorithm iter method routin algebra expand group term refer follow algorithm iter method appli euclidean algorithm qn start finit list quotient divis initi respect long qi defin comput qixi comput qiyi repeat abov increment answer secondtolast xn yn pseudocod thi method function extended_gcd lastx lasti temp quotient div mod temp temp lastxquoti lastx temp temp lastyquoti lasti temp return lastx lasti recurs method solv gener case equat correspond follow algorithm result divis algorithm return trivial solut otherwis repeat algorithm modulu store solut solut current equat minu time quotient divid directli translat thi pseudocod function extended_gcd mod return els extended_gcd mod return xi div proof correct gcd prove evenli divid ie mod otherwis recurs call mod div mod div div div euclidean algorithm proof gcd gcd mod thi proof depend recurs call step comput multipl invers finit field extend euclidean algorithm calcul multipl invers finit field pseudocod irreduc polynomi defin finit field element invers desir form algorithm suitabl determin invers follow note remaind quotient function differ array remaind quotient remaind refer remaind number divid quotient refer integ quotient number divid exampl remaind quotient equival oper languag respect pseudocod remaind remaind auxiliari auxiliari remaind gt remaind remaind remaind remaind quotient quotient remaind remaind auxiliari quotient auxiliari auxiliari invers auxiliari note minu sign necessari finit field step auxiliari quotient auxiliari auxiliari thi true sinc finit field gf instanc addit subtract word addit invers gf thi occur ani finit field gf integ exampl exampl polynomi defin finit field gf bigendian hexadecim notat element invers desir perform algorithm result follow remaind quotient auxiliari note addit binari finit field xor thu invers confirm multipli element togeth refer thoma cormen charl leiserson ronald rivest clifford stein introduct algorithm second edit mit press mcgrawhil isbn greatest common divisor bzout ident extern link algorithm hand algorithm hand extend euclidean algorithm applet sourc form algorithm determin multipl invers gf simpl explan extend euclidean algorithm extend euclidean algorithm applet deutsch numbertheoret algorithm primal test ak apr balliepsw ecpp fermat lucaslehm lucaslehm mersenn number lucaslehmerriesel proth theorem ppin solovaystrassen millerrabin trial divis siev algorithm siev atkin siev eratosthen siev sundaram wheel factor integ factor algorithm cfrac dixon ecm euler pollard rho qs gnf snf ration siev fermat shank squar form trial divis shor algorithm algorithm ancient egyptian multipl aryabhata binari gcd chakravala euclidean extend euclidean integ relat algorithm integ squar root modular exponenti shankstonelli ital indic algorithm number special form bold indic determinist algorithm primal test