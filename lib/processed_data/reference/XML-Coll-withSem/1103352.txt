divideandconqu eigenvalu algorithm giftlit numer linear algebra divideandconqu eigenvalu algorithm class eigenvalu algorithm hermitian real symmetr matric circa becom competit term stabil effici tradit algorithm qr algorithm basic concept algorithm cours famou divideandconqu approach comput scienc eigenvalu problem divid problem roughli half size solv recurs eigenvalu origin problem comput result smaller problem simplest version divideandconqu algorithm origin propos cuppen mani detail lie outsid scope thi articl will omit note howev consid detail algorithm fulli stabl background eigenvalu algorithm hermitian matric divideandconqu reduct tridiagon form time matrix standard method thi household reflect frac flop frac eigenvector well algorithm arnoldi iter better class matric will consid thi case possibl deflat eigenvalu problem smaller problem consid block diagon matrix begin bmatrix t_ t_ end bmatrix eigenvalu eigenvector simpli t_ t_ will alway faster solv smaller problem solv origin problem onc thi techniqu improv effici mani eigenvalu algorithm ha special signific divideandconqu rest thi articl will assum input divideandconqu algorithm time real symmetr tridiagon matrix algorithm modifi hermitian matric detail divid divid divideandconqu algorithm realiz tridiagon matrix block diagon block diagonalpng size submatrix t_ will call time t_ time note remark block diagon true chosen ie mani decompos matrix howev sens effici standpoint choos approx write block diagon matrix plu correct block diagon plu correctionpng onli differ t_ hat lower entri t_ nn hat ha replac t_ nn beta similarli hat top left entri t_ ha replac t_ beta remaind divid step solv eigenvalu desir eigenvector hat hat find diagon hat q_ d_ q_ hat q_ d_ q_ thi accomplish recurs call divideandconqu algorithm practic implement switch qr algorithm small submatric conquer conquer algorithm unintuit diagon submatric calcul abov find diagon origin matrix defin q_ q_ q_ row q_ q_ row q_ elementari begin bmatrix q_ q_ end bmatrix left begin bmatrix d_ d_ end bmatrix beta right begin bmatrix q_ q_ end bmatrix remain task ha reduc find eigenvalu diagon matrix plu rankon correct befor thi simplifi notat eigenvalu matrix diagon ani vector lambda eigenvalu lambda correspond eigenvector lambda lambda lambda mind nonzero scalar eigenvector lambda case onli nonzero posit sinc diagon thu inner product therefor lambda written scalar equat sum_ frac w_ d_ lambda thi equat secular equat problem ha therefor reduc find root ration function defin lefthand side thi equat gener eigenvalu algorithm iter divideandconqu algorithm differ solv nonlinear secular equat requir iter techniqu newtonraphson method howev root iter requir theta flop degre ration function cost iter thi algorithm theta analysi common divid conquer algorithm will master theorem analyz time rememb abov choos approx write recurr relat time tleft frac right theta notat master theorem thu log_ clearli theta omega theta rememb abov point reduc hermitian matrix tridiagon form frac flop thi dwarf time divideandconqu thi point clear advantag divideandconqu algorithm offer qr algorithm theta flop tridiagon matric advantag divideandconqu eigenvector well thi case reduct tridiagon form frac second algorithm theta well qr algorithm reason target precis thi approx wherea divideandconqu approx frac reason thi improv divideandconqu theta algorithm multipli matric separ iter wherea qr thi occur everi iter step ad frac flop reduct total improv approx approx flop practic divideandconqu algorithm ha realist eigenvalu problem algorithm actual doe better thi reason veri matric vector tend numer spars mani entri valu smaller float point precis allow numer deflat ie break problem uncoupl subproblem variant implement algorithm simplest version mani practic implement complic correct guarante stabil variant correct exist special rootfind techniqu ration function better newtonraphson method term perform stabil improv iter divideandconqu algorithm divideandconqu algorithm readili parallel linear algebra comput packag lapack highqual parallel implement