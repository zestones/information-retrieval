counter machin refer model akldawg comput model counter machin refer model set choic convent counter machin model variant regist machin concept permit comparison model serv didact function regard exampl descript base convent model label terminolog refer base model intend preserv consist articl introduct counter machin model reader will observ bewild plethora instruct set defin author thi refer will symbol defin provid standar format syntax facilit comparison set help definit base model deriv minski lambek shepherdsonsturgi formal definit counter machin refer model consist finit set regist rn hold nonneg integ alway finit list instruct instruct thi list follow increment valu regist rj successor instruct eg instruct numer nextinsequ dec content empti decrement valu regist rj els content successor instruct jz content regist rj equal jump instruct iz els successor instruct halt halt comput formal semant instruct regist instruct counter ic ic ic dec gt els ic ic jz iz ic els ic ic refer librari reflib counter machin refer model librari reflib set convent chosen specifi instruct label specifi syntax symbolstr label specifi semant content label demonstr equival reflib instruct set regist machin model emul sens instruct becom subroutin base instruct shepherdsonsturgi thi strategi demonstr three base instruct form set equival primit recurs function reflib microcod implement strategi counter machin augment instruct instruct set machin reflib script instruct implement formal precis demonstr imagin preprocessor expand reflib script templat standard instruct counter machin instruct variou counter machin instruct set ultra risc instruct set case differ risc machin builder veri machin differ author differ instruct set basic instruct map differ relev counter machin variant model emul instruct implement script comment jz uncondit jump regist jz rx jz rx jz els decjz jz dec test dec incj clr jz dec goto dec goto mov rx ry clr ry jz rx ry dec rx continu move rx ry clear content rx cpi rx ry clr ry jz clr rw rx jz dec rw ry rw continu dec rx copi rx ry rw free cpi clr immedi explicit copi constant instruct clear ie time altern constant regist cpi cmp rx ry cpi rx jz cpi ry rw jz jz dec continu dec rw compar rx ry return rx equal ry add rx rx term jz dec clr cpi rrxri perhap preserv content rx ry mul rx ry term jz dec clr cpi add multipli rrx ry perhap preserv content rx ry rx ry term subtract rrxri perhap preserv content rx ry complex instruct counter machin analysi instruct set preced wa theoret laboratori risc cisc featur mani author augment basic counter machin model instruct set complex instruct thi kind studi emul instruct implement script comment exp rx ry term jz dec clr cpi add mul exponenti rrx ry perhap preserv content rx ry complex instrucion overload talk note refer tabl syntax symbol syntax boolosburgessjeffrey symbol deriv melzak boolosburgessjeffrey discuss ifthenels construct footnoteifthenels oper def phrase content def regist addressnamenumb regist includ addressnamenumb content exampl def content regist addressnamenumb def arrow denot replac sens deleteemptyzero content copi thi differ exampl add throw pebbl hole pick move exampl twovari instruct rj rj defin rj rk read content regist rj plu replac origin content regist rk content regist rj remain thi differ rj rk rj signifi content regist rj wa actual rj move regist rk thu clean rj ad rk ic def instruct counterregist finitest machin stateregist exampl ir ir read prose content finitest machin instruct regist plu replac previou content instruct counter regist icr exampl iz ir instruct number iz replac previou content instruct regist def successor function footnotesuccessor model def predecessor function pd footnotesuccessor model choic refer base model thi model doe indirect address random access machin refer model base set counter machin instruct deriv advantag disadvantag model dec jz wa chosen becaus survey literatur indic common arguabl easier histor theoret sens second socal successor model arguabl basic becaus close resembl peano axiom oper primit recurs function mccarthi formal footnotesuccessor model thi footnot decrement jz jumpifzero instruct deriv successor model choic instruct mnemon convent set instruct mnemon boolosburgessjeffrey bother mnemon minski symbol condit uncondit instruct author stone branch place jump branch sometim rel branch three instruct oppos absolut jump instruct author goto interchang jump thi refer will follow knuth jump jx indic type test knuth abbreviationsasmnemon interest thi refer model definit reader abl guess rough mnemonicsabbrevi knuth follow list actual paramet specifi regist eg formationprincipl english ii letter iii prefer vowel n_oper move append indic specif accumul regist eg lda sta cmpa inca nop add lda ldan ldn sta stn cmp cmpa mul div hlt move jmp inca incn note decrement dec copi cpi list dec deca cpi will ad jz jnz je jne will necessari form initi ump ot qual compound instruct eg jzdec will concaten simpler mnemon footnot footnotesuccessor model reader argu successor model counter machin instruct je jump equal ie clr je rj rk basic becaus close resembl peano axiom oper primit recurs function inde model minski discuss ture equival set oper call mccarthi formal minski deriv dec threeinstruct successorset cf jz trivial proce thi second model discuss equival primit recurs function general recurs function cf thi successor set problem set dec jz happen dec occur empti regist doe occur howev model requir je format je formal syntax follow letter will front regist number eg place avoid confus regist exampl avoid ambigu symbol number instruct iz instruct regist statemachin instruct counter regist icr clr ir ir ir ir je rj rk rj rk ir els ir ir follow successor set clr je rj rk creat instruct set dec jz treatment minski minski jne jump equal je set jz rk je rk content regist dec requir scratchpad regist algorithm proce clear scratch pad test input ii clear scratchpad content content increment alway iii equal clear copi clean mess leav onli content note follow exampl dec free_vari declar explicit regist thi emphas point instanc dec built separ explicit regist declar thi becaus dec call subroutin call dec pass dec littl piec code insert hand compil wherev desir dec piec code thi exampl emphas fact onc instruct set clr je counter machin specifi hardwar machin softwar patch case ram rasp indirect address allow true subroutin label instr instruct formal equival comment dec target regist initi clr clear scratchpad regist test_for je ir els ir icr content target clr clear scratchpad regist increment_loop increment regist content content je ir els ir ir content will content je icr els icr icr uncondit jump move clr clear target regist move _loop je ir els ir ir clear scratchpad regist increment content regist je ir els ir ir uncondit jump instruct je ir els ir ir uncondit jump instruct clr clear scratchpad regist clean_up clr clear scratchpad regist target regist footnoteifthenels oper minski els thi express true valu fals valu minski condit express mccarthi formal thi type oper case function defin kleen mutuallyexclus predic counter machin main user reflib regist machin hub articl model anoth augment model respect refer model ramrefmodel augment indirect address reflib random access program machin base ramrefmodel