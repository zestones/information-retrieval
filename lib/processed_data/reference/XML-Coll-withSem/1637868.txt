actor model tobia bergemann wikipedia refer cleanup actor model amboxstyl style refer thi articl clearer differ consist style comput scienc actor model mathemat model concurr comput treat actor univers primit concurr digit comput respons messag receiv actor local decis creat actor send messag determin respond messag receiv actor model origin paper carl hewitt peter bishop richard steiger ha framework theoret understand concurr theoret basi sever practic implement concurr system relationship model work discuss indeterminaci concurr comput actor model process calculi histori main articl histori actor model unlik previou model comput actor model wa inspir physic law wa influenc program languag lisp simula earli version smalltalk well capabilitybas system packet switch develop wa motiv prospect highli parallel comput machin consist dozen hundr independ microprocessor local memori commun processor commun highperform commun network sinc time advent massiv concurr multicor comput architectur ha rekindl interest actor model follow hewitt bishop steiger public iren greif develop oper semant actor model doctor year henri baker hewitt publish set axiomat law actor system major mileston includ william clinger dissert introduc denot semant base power domain gul agha dissert develop transitionbas semant model complementari clinger thi result full develop actor model theori major softwar implement work wa russ atkinson bepp attardi henri baker gerri barber peter bishop peter de jong ken kahn henri lieberman carl man tom reinhardt richard steiger dan theriault messag pass semant group massachusett institut technolog mit group led chuck seitz california institut technolog caltech bill dalli mit construct comput architectur develop messag pass model actor model implement actor model ha carri caltech comput scienc kyoto univers tokoro laboratori mcc mit artifici intellig laboratori sri stanford univers univers illinoi urbanachampaign open system laboratori univers pari univers pisa univers tokyo yonezawa laboratori elsewher fundament concept actor model adopt philosophi everyth actor thi everyth object philosophi objectori program languag differ objectori softwar typic execut sequenti actor model inher concurr actor comput entiti respons messag receiv concurr send finit number messag actor creat finit number actor design behavior messag receiv assum sequenc abov action carri parallel commun actor occur asynchron send actor doe wait messag receiv befor proceed comput recipi messag identifi address sometim call mail address thu actor onli commun actor address ha messag receiv address actor creat actor model character inher concurr comput actor dynam creation actor inclus actor address messag interact onli direct asynchron messag pass restrict messag arriv order formal system year sever differ formal system develop permit reason system actor model includ oper semant law actor system denot semant transit semant formal fulli faith actor model formal guarante deliveri messag includ follow sever differ actor algebra linear logic applic actor model framework model understand reason wide rang concurr system exampl electron mail email model actor system account model actor email address actor address web servic model soap endpoint model actor address object lock eg java model serial provid implement messag continu arriv perhap store intern queue serial import kind actor defin properti continu avail arriv messag everi messag serial guarante arriv test test control notat ttcn follow actor model close ttcn actor test compon parallel test compon ptc main test compon mtc test compon send receiv messag remot partner peer test compon test system interfac identifi address test compon ha behaviour tree bound test compon parallel dynam creat parent test compon builtin languag construct allow defin action expect messag receiv intern messag queue send messag anoth peer entiti creat test compon model prior actor model actor model build previou model comput lambda calculu lambda calculu alonzo church view earliest messag pass program languag hewitt bishop steiger abelson sussman exampl lambda express implement tree data structur suppli paramet leftsubtre rightsubtre tree paramet messag getleft return leftsubtre likewis messag getright return rightsubtre leftsubtre rightsubtre messag messag getleft leftsubtre els messag getright rightsubtre howev semant lambda calculu express variabl substitut valu paramet substitut bodi invok lambda express substitut model unsuit concurr becaus doe allow capabl share chang resourc inspir lambda calculu interpret program languag lisp data structur call environ valu paramet substitut bodi invok lambda express thi allow share updat share data structur provid concurr simula simula pioneer messag pass comput motiv discret event simul applic applic becom larg unmodular previou simul languag time step larg central program updat simul object chang depend simul object interact step kristen nygaard olejohan dahl develop idea describ ifip workshop method object updat local base messag object addit introduc class structur object inherit innov consider improv modular program howev simula coroutin control structur true concurr smalltalk alan kay wa influenc messag pass patterndirect invoc planner develop smalltalk hewitt wa intrigu wa complex commun includ invoc mani field includ global sender receiv replystyl statu repli oper selector kay visit mit discuss idea build logo work seymour papert littl person model comput teach children program howev messag pass wa quit complex code languag wa view interpret simpli stream token dan ingal describ token encount program wa dynam context determin receiv subsequ messag lookup began class dictionari current activ fail move sender activ sender chain bind wa final token valu becam receiv messag interpret activ code object class thi led believ mathemat model concurr comput base messag pass simpler subsequ version smalltalk languag larg follow path virtual method simula messag pass structur program howev primit integ float point number object author simula consid primit object refrain larg effici reason java expedi primit object version integ float point number program languag version java start java adopt eleg solut box unbox variant earlier lisp implement smalltalk system becom veri influenti innov bitmap display person comput class browser interfac mani detail kay earli histori smalltalk meanwhil actor effort mit remain focus develop scienc engin higher level concurr paper jeanpierr briot idea develop incorpor kind actor concurr version smalltalk petri net prior develop actor model petri net wide model concurr comput howev wide acknowledg import limit model control flow data flow consequ readili compos therebi limit modular hewitt point anoth difficulti petri net simultan action ie atom step comput petri net transit token simultan disappear input place transit appear output place physic basi primit thi kind simultan question despit appar difficulti petri net continu popular approach model concurr subject activ messagepass semant actor model semant messag pass unbound nondetermin controversi arguabl concurr program interrupt handler dure cours normal oper comput abl receiv inform outsid charact keyboard packet network inform arriv execut comput wa interrupt special code call interrupt handler wa call inform buffer subsequ earli interrupt began simul concurr execut sever program singl processor concurr share memori rise problem concurr control origin thi problem wa conceiv mutual exclus singl comput edsger dijkstra develop semaphor toni hoar brinch hansen develop monitor solv mutual exclus problem howev solut provid program languag construct encapsul access share resourc thi encapsul wa accomplish serial construct hewitt atkinson atkinson model comput eg ture machin post product lambda calculu base mathemat global repres comput step gener mccarthi hay dijkstra event order versu global comput step wa global comput global global approach wa continu automata theori finit machin push stack machin includ nondeterminist version nondeterminist automata properti bound nondetermin machin alway halt start initi bound number halt edsger dijkstra develop nondeterminist global approach dijkstra model rise controversi concern unbound nondetermin unbound nondetermin call unbound indeterminaci properti concurr amount delay servic request becom unbound result arbitr content share resourc guarante request will eventu servic hewitt argu actor model provid guarante servic dijkstra model unbound amount time execut sequenti instruct comput parallel program start well defin termin onli bound number dijkstra consequ model provid guarante servic dijkstra argu wa imposs implement unbound nondetermin hewitt argu otherwis bound place long comput circuit call arbit settl metast electron arbit comput deal circumst comput clock oper asynchron input outsid eg keyboard input disk access network input unbound time messag comput receiv meantim comput travers unbound number actor model featur unbound nondetermin wa captur mathemat model will clinger domain theori global actor model direct commun asynchroni messag actor model necessarili buffer thi wa sharp break previou approach model concurr comput lack buffer caus great deal misunderstand time develop actor model controversi issu argu messag buffer ether environ messag actor model simpli packet ip requir synchron handshak recipi actor creation plu address messag variabl topolog natur develop actor model wa allow address messag influenc packet switch network hewitt propos develop model concurr comput commun ani requir field empti cours sender commun desir recipi access address recipi alreadi address commun comput send messag recipi receiv respons thi send commun ha messag address anoth actor call resumpt sometim call continu stack frame messag recipi caus respons messag resumpt actor creation plu inclus address actor messag actor potenti variabl topolog relationship anoth object simula variabl topolog relationship anoth inher concurr oppos previou approach base compos sequenti process actor model wa develop inher concurr model actor model sequenti wa special case deriv concurr comput explain actor model theori requir order messag arriv hewitt argu ad requir messag arriv order actor model output messag order desir model queue actor provid thi function queue actor queue messag arriv retriev fifo order actor messag actor respons subsequ messag receiv anoth messag requir arriv befor thi respect actor model mirror packet switch system guarante packet receiv order provid order deliveri guarante allow packet switch buffer packet multipl path send packet resend damag packet provid optim exampl actor allow pipelin process messag thi cours process messag actor design behavior process messag fact process anoth messag befor ha finish process becaus actor allow pipelin process messag doe pipelin process messag pipelin engin tradeoff extern observ process messag actor ha pipelin ambigu definit actor creat possibl pipelin cours possibl perform pipelin optim incorrectli implement case unexpect behavior occur local anoth import characterist actor model local local process messag actor send messag onli address receiv messag address alreadi befor receiv messag address actor creat process messag synthes address actor local simultan chang multipl locat thi differ model concurr eg petri net model token simultan remov multipl locat place locat compos actor idea compos actor system larger import aspect modular wa develop gul agha doctor dissert develop gul agha ian mason scott smith carolyn talcott behavior key innov wa introduct behavior specifi mathemat function express actor doe process messag includ specifi behavior process messag arriv behavior provid mechan mathemat model share concurr behavior freed actor model implement detail eg token stream interpret howev critic understand effici implement system describ actor model requir extens optim actor model implement detail represent theorem represent theorem concurr system actor model mathemat denot denot system construct increasingli better approxim initi behavior call behavior approxim function progress construct denot follow hewitt clinger denot i progress si sinc actor model veri gener represent theorem appli main stream model well exampl appli petri net process calculi model twophas commit protocol protocol handl synchron relationship mathemat logic develop actor model ha interest relationship mathemat logic key motiv develop wa understand deal control structur issu aros develop planner program languag onc actor model wa initi defin import challeng wa understand power model rel kowalski thesi comput subsum deduct kowalski thesi turn fals concurr comput actor model indeterminaci concurr comput thi result controversi revers previou expect becaus kowalski thesi true sequenti comput kind parallel comput eg lambda calculu attempt extend logic program concurr comput howev hewitt agha claim result system deduct follow sens comput step concurr logic program system follow deduct previou step indeterminaci concurr comput migrat migrat actor model abil actor chang locat eg dissert aki yonezawa model post offic custom actor enter chang locat oper exit actor migrat model locat actor chang actor migrat howev faith thi model controversi subject secur secur actor protect follow hardwir actor physic connect hardwar burrough lisp machin virtual machin java virtual machin common languag runtim oper system capabilitybas system sign andor encrypt actor address synthes address actor delic point actor model abil synthes address actor case secur prevent synthesi address secur howev actor address simpli bit string clearli synthes difficult infeas guess address actor bit string long soap url address endpoint actor reach sinc url charact string clearli synthes encrypt imposs guess synthes address actor usual model map idea actor system perform map actual actor address exampl comput memori structur comput model actor system doe map case soap address model dn rest url map contrast model messagepass concurr robin milner initi publish work concurr wa notabl wa base compos sequenti process work differ actor model becaus wa base number process topolog commun number string synchron commun origin commun sequenti process model publish toni hoar differ actor model becaus wa base parallel composit number sequenti process connect topolog commun synchron messagepass base process actor model process calculi histori version csp abandon commun base process favor anonym commun channel approach milner work calculu commun system calculu earli model milner hoar properti bound nondetermin modern theoret csp hoar rosco explicitli provid unbound nondetermin current import forti year public moor law hardwar develop local nonloc massiv concurr local concurr enabl hardwar multicor platform unveil idf spring microprocessor multichip modul high perform interconnect nonloc concurr enabl hardwar wire wireless broadband packet switch commun wifi ultra wideband local nonloc storag capac grow exponenti accord hewitt actor model face issu comput commun architectur concurr program languag web servic includ follow scalabl challeng scale concurr local nonloc transpar bridg chasm local nonloc concurr transpar current controversi issu advoc strict separ local concurr concurr program languag eg java nonloc concurr soap web servic strict separ produc lack transpar caus problem desirablenecessari chang local nonloc access web servic distribut comput inconsist inconsist norm becaus veri larg knowledg system human inform system interact inconsist thi inconsist extend document specif veri larg system eg microsoft window softwar intern inconsist mani idea introduc actor model find applic multiag system reason hewitt key differ agent system definit impos extra constraint actor typic requir commit goal actor model appli client cloud comput actor import contribut semant actor gul agha bepp attardi henri baker will clinger iren grief carl man ian mason ugo montanari maria simi scott smith carolyn talcott prasanna thati aki yonezawa import contribut implement actor bill atha russ atkinson bepp attardi henri baker gerri barber peter bishop nanett boden jeanpierr briot bill dalli peter de jong jessi dedeck ken kahn henri lieberman carl man tom reinhardt chuck seitz richard steiger dan theriault mario tokoro darrel woelk carlo varela program actor number differ program languag employ actor model variat languag includ program languag erlang gambitc termit io languag ptolemi project rebeca model languag salsa scala actor librari framework implement permit actorstyl program languag nt actor builtin framework kilim messagepass framework java data flow special rel specif rel simultan quantum physic physic motiv actor model theori multiag system neural network scientif commun metaphor refer carl hewitt peter bishop richard steiger univers modular actor formal artifici intellig ijcai william clinger june http foundat actor semant mathemat doctor dissert mit iren greif august semant commun parallel process eec doctor dissert mit henri baker carl hewitt august law commun parallel process ifip gul agha http actor model concurr comput distribut system doctor dissert mit press gul agha ian mason scott smith carolyn talcott januari foundat actor comput journal function program carl hewitt commit physic organiz social coin aama mauro gaspari gianluigi zavattaro algebra actor technic report univers bologna gaspari zavattaro algebra actor formal method open object base system gul agha prasanna thati algebra theori actor applic simpl objectbas languag oo fm dahl festschrift lnc john darlington guo formal actor linear logic intern confer objectori inform system kay alan march earli histori smalltalk acm sigplan doi brinchhansen origin concurr program semaphor remot procedur call springer isbn brinch hansen monitor concurr pascal person histori comm acm car hoar monitor oper system structur concept comm acm octob robin milner process mathemat model comput agent logic colloquium brinch hansen oper system principl prenticehal juli carl hewitt septemberoctob org scalabl robust privacyfriendli client cloud comput ieee internet comput car hoar commun sequenti process cacm august henri lieberman lot thing onc confus parallel mit ai memo henri lieberman preview mit ai memo philipp haller martin odersky actor unifi thread event technic report lamp philipp haller martin odersky eventbas program invers control proc jmlc srinivasan sriram alan mycroft kilim isolationtyp actor java european confer object orient program ecoop retriev read paul baran distribut commun network ieee transact commun system march peter landin gener jump label report univac system program august reprint higher order symbol comput edsger dijkstra solut problem concurr program control cacm jack denni earl van horn program semant multiprogram comput cacm march olejohan dahl kristen nygaard class subclass declar ifip confer simul program languag carl hewitt planner languag prove theorem robot ijcai william wood transit network grammar natur languag analysi cacm terri winograd procedur represent data comput program understand natur languag mit ai januari carl hewitt procedur embed knowledg planner ijcai gm birtwistl olejohan dahl myhrhaug kristen nygaard simula auerbach publish daniel bobrow model control structur artifici intellig program languag ijcai carl hewitt al actor induct metaevalu confer record acm symposium principl program languag januari carl hewitt al behavior semant nonrecurs control structur proceed colloqu sur la programm april iren greif carl hewitt actor semant confer record acm symposium principl program languag januari carl hewitt ijcai septemb alan kay adel goldberg instruct manual xerox parc memo edsger dijkstra disciplin program prentic hall carl hewitt henri baker actor continu function proceed ifip work confer formal descript program concept august henri baker carl hewitt increment garbag collect process proceed symposium artifici intellig program languag sigplan notic august gill kahn david macqueen coroutin network parallel process ifip aki yonezawa specif verif techniqu parallel program base messag pass semant mit eec doctor dissert decemb carl hewitt view control structur pattern pass messag journal artifici intellig june henri baker actor system realtim comput mit eec doctor dissert januari carl hewitt russ atkinson synchron actor system proceed acm sigactsigplan symposium principl program languag carl hewitt russ atkinson specif proof techniqu serial ieee journal softwar engin januari ken kahn comput theori anim mit eec doctor dissert august carl hewitt bepp attardi henri lieberman deleg messag pass proceed intern confer distribut system huntsvil al octob nissim francez car hoar daniel lehmann willempaul de roever semant nondetermi concurr commun journal comput system scienc decemb georg miln robin milner concurr process syntax jacm april russ atkinson automat verif serial mit doctor dissert june bill kornfeld carl hewitt scientif commun metaphor ieee transact system man cybernet januari bill kornfeld parallel problem solv mit eec doctor dissert august daniel theriault primer languag mit ai memo april daniel theriault issu design implement mit ai technic report june henri lieberman objectori simul apiari confer american associ artifici intellig washington august carl hewitt peter de jong analyz role descript action open system proceed nation confer artifici intellig august carl hewitt henri lieberman design issu parallel architectur artifici intellig mit ai memo nov daniel ingal evolut smalltalk virtual machin bit histori word advic addison wesley hal abelson gerald jay sussman juli sussman structur interpret comput program mit press mcgrawhil car hoar commun sequenti process prentic hall carl hewitt challeng open system byte magazin april reprint foundat artifici intellig sourcebook cambridg univers press carl man travel actor observatori ecoop appear lectur note comput scienc william atha charl seitz multicomput messagepass concurr comput ieee comput august william atha nanett boden cantor actor program system scientif comput proceed nsf workshop objectbas concurr program special issu sigplan notic jeanpierr briot object actor studi limit symbiosi rapport de recherch rxflitp pari franc septemb william dalli will univers mechan concurr parl horwat chien dalli experi cst program implement pldi carl hewitt open inform system semant proceed intern workshop distribut artifici intellig octob bandera texa akinori yonezawa abcl objectori concurr system mit press kahn vijay saraswat actor special case concurr constraint logic program sigplan notic octob describ janu carl hewitt open inform system semant journal artifici intellig januari carl hewitt jeff inman dai betwixt intellig agent open system scienc ieee transact system man cybernet novdec carl hewitt gul agha guard horn claus languag deduct logic intern confer gener comput system ohmsha tokyo artifici intellig mit mit press william dalli al messagedriven processor multicomput process node effici mechan ieee micro april miriyala agha ysami visulat actor program predic transit net journal visual program alan kay earli histori smalltalk second acm confer histori program languag carl hewitt carl man negoti architectur largescal crisi manag workshop model conflict manag cooper problem solv seattl wa aug darrel woelk develop infosleuth agent rosett actor base languag proceed cikm workshop intellig inform agent carl hewitt carl man synthet infrastructur multiag system proceed icma kyoto japan decemb frolund coordin distribut object actorbas approach synchron mit press novemb kim thal actor system effici scalabl concurr comput phd thesi univers illinoi urbana champaign jeanpierr briot acttalk framework objectori concurr programmingdesign experi francejapan workshop jamali thati agha actor base architectur custom control agent ensembl ieee intellig system don box david ehnebusk gopal kakivaya andrew layman noah mendelsohn henrik nielsen satish thatt dave winer simpl object access protocol soap note astley sturman agha customiz middlewar modular distribut softwar cacm carlo varela worldwid comput univers actor linguist abstract migrat coordin phd thesi illinoi urbanachampaign venkatasubramanian talcott agha formal model reason adapt qosen middlewar formal method europ fme edward lee neuendorff wirthlin actorori design embed hardwar softwar system journal circuit system comput thati ziaei agha theori test actor formal method open objectbas distribut system march thati ziaei agha theori test asynchron calculi local match algebra methodolog softwar technolog springer verlag septemb lnc gul agha carlo varela worldwid comput middlewar practic handbook internet comput crc press stephen neuendorff actorori metaprogram phd thesi univers california berkeley decemb carl hewitt repeat demis logic program whi will reincarn wrong whi lesson ai applic technic report aaai press march carl hewitt commit physic organiz social coin aama april carl hewitt commit physic organiz social revis pablo noriega et al editor lnai springerverlag carl hewitt largescal organiz comput requir unstratifi paraconsist reflect coin extern link set specul paul mackay whi ha actor model succeed javact java librari program concurr distribut mobil applic actor model open implement principl function java java librari includ implement concurr actor code exampl standard java java bgga style