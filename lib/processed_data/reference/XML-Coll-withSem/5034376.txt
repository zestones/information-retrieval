reactiv plan hawkeston autom plan schedul dynam plan redirect anim studio dynam plan artifici intellig reactiv plan denot group techniqu action select autonom agent techniqu differ classic plan aspect oper time fashion henc cope highli dynam unpredict environ second comput action everi instant base current context reactiv planner alway exploit reactiv plan store structur describ agent prioriti behaviour term reactiv plan goe term reactiv ha becom pejor antonym proactiv sinc nearli agent reactiv plan proactiv begun refer reactiv plan dynam plan reactiv plan represent sever repres reactiv plan requir basic represent unit compos unit plan conditionact rule product condit action rule ifthen rule rule form condit action rule call product rule follow condit hold perform action action extern eg pick someth move intern eg write fact intern memori evalu set rule condit normal boolean action perform product rule organis rel flat structur organ hierarchi kind exampl subsumpt architectur consist layer interconnect behavior actual finit machin respons appropri input layer organ simpl stack higher layer subsum goal lower system tree includ special mechan chang goal rule subset current import flat structur rel easi build allow onli descript simpl behaviour requir immens complic condit compens lack structur import ani distribut action select algorithm conflict resolut mechan thi mechan resolv conflict action propos rule condit hold instant conflict solv exampl assign prioriti rule advanc eg posh architectur assign prefer eg soar architectur learn rel util rule eg actr exploit form plan expert system simpler heurist recenc select rule difficult guarante good behaviour larg system simpl approach conflict resolut onli necessari rule mutual exclus action cf blumberg limit thi kind reactiv plan brom finit machin finit machin fsm model behaviour system fsm wide comput scienc model behaviour agent onli possibl applic typic fsm describ behaviour agent consist set transit transit actual condit action rule everi instant fsm activ transit evalu transit activ anoth gener transit rule follow form condit activatenewst transit connect self system allow execut transit action actual chang produc behaviour fsm depend associ design act script act atom action perform agent fsm thi action perform everi time step howev case everi associ script describ sequenc action agent ha perform fsm transit activ script simpli interrupt start script complic broken sever script hierarch fsm exploit automaton everi substat onli atom level associ script complic atom action comput hierarch fsm equival fsm hierarch fsm convert classic fsm howev hierarch approach facilit design better paper damian isla exampl asm comput game bot hierarch fsm fuzzi approach ifthen rule fsm combin fuzzi logic condit action boolean yesno respect approxim smooth consequ result behaviour will transit smoother especi case transit task howev evalut fuzzi condit slower evalu crisp counterpart architectur alex champandard connectionist approach reactiv plan express connectionist network artifici neural network freeflow hierarchi basic represent unit unit sever input link feed unit abstract activ output link propag activ follow unit unit work activ transduc typic unit connect layer structur posit connectionist network result behaviour smooth behaviour produc crisp ifthen rule fsm second network adapt third mechan inhibit henc behaviour describ proscript rule describ behaviour onli prescript howev method sever flaw design complic describ behaviour network compar ifthen rule second onli rel simpl behaviour describ especi adapt featur exploit reactiv plan algorithm typic reactiv plan algorithm evalu ifthen rule comput connectionist network howev algorithm special featur rete evalu proper logic represent suitabl onli crisp rule rule reevalu everi time step form cach store evalu previou step script languag sometim rule fsm directli primit architectur eg soar reactiv plan program script languag rule onli primit jam abl steer steer special reactiv techniqu navig agent base superposit attract repuls forc agent steer base origin work boid craig reynold steer achiev simpl form goal navig obstacl avoid behaviour wall follow behaviour enemi approach predat avoid crowd behaviour advantag steer comput veri effici comput game hundr soldier driven thi techniqu case complic terrain eg build howev steer combin pathfind form plan behavior base ai refer blumberg trick dog etholog interact creatur phd thesi massachusett institut technolog brom hierarch reactiv plan limit proceed mna workshop edinburgh scotland bryson intellig design principl modular coordin engin complex adapt agent phd thesi massachusett institut technolog champandard ai game develop synthet creatur learn reactiv behavior rider usa grand cliff malhotra creatur artifici life autonom softwareag entertain johnson proceed intern confer autonom agent acm press creatur develop resourc huber jam bditheoret mobil agent architectur proceed third intern confer autonom agent seatl isla handl complex halo gamastura onlin reynold flock herd school distribut behavior model comput graphic siggraph confer proceed de sevin thalmann motiv model action select virtual human comput graphic intern cgi ieee comput societypress york softimagebehavior product avid technolog inc tyrrel comput mechan action select phd dissert centr cognit scienc univers edinburgh van waveren quak iii arena bot master thesi faculti univers technolog delft wooldridg introduct multiag system john wiley son platform fast agent prototyp unreal tournament posh reactiv planner design develop jj bryson