optimist concurr control neilc concurr control comput scienc field databas optimist concurr control occ concurr control method relat databas lock ing commonli refer optimist lock refer nonexclus lock creat databas optimist concurr control base assumpt databas transact nt conflict transact allow occ permiss possibl allow transact execut three phase occ transact read client read valu databas store privat sandbox cach client edit valid client ha complet edit valu sandbox cach initi storag chang databas dure valid algorithm check chang data conflict alreadycommit transact case backward valid scheme current execut transact case forward valid scheme conflict exist conflict resolut algorithm resolv conflict ideal minim number chang user resort entir transact abort result loss chang user write possibl conflict transact commit optimist concurr gener environ low content data conflict rare valid effici lead higher throughput concurr control method howev conflict happen cost repeatedli restart transact hurt perform significantli nonlock concurr control method better perform mani conflict web usag stateless natur http lock infeas web user interfac common user start edit record leav follow cancel logout link lock user attempt edit record wait user lock expir occ natur choic simpl implement avoid unnecessari wait silent overwritten record typic form user includ hidden field record origin content timestamp sequenc number opaqu token submit thi compar databas differ conflict resolut algorithm invok exampl mediawiki edit occ conflict resolut algorithm describ bugzilla occ conflict call midair collis http wikimozillaorgbugzilla faq administrative_quest does_bugzilla_provide_record_locking_when_there_is_simultaneous_access_to_the_same_bug rubi rail framework ha api occ http apirubyonrailscomclassesactiverecordlockinghtml revis control system support merg model concurr occ refer kung john robinson june optimist method concurr control acm transact databas system doi opportunist lock