capabilitybas secur bjweek comput secur model capabilitybas secur concept design secur comput system capabl system key communic unforg token author refer valu refer object associ set access user program capabilitybas oper system capabl access object capabilitybas secur refer principl design user program directli share capabl accord principl privileg oper system infrastructur necessari transact effici secur oper system implement facil resembl capabl typic provid support allow exchang capabl possibl mutual untrust entiti primari grant distribut access system capabilitybas system contrast design goal mind capabl discuss thi confus posix capabl coarsegrain privileg transfer process capabl capabilitybas secur capabl achiev object improv system secur place forgeabl refer forgeabl refer exampl path identifi object doe specifi access appropri object user program hold refer consequ ani attempt access referenc object valid oper system typic access control list acl system capabl mere fact user program possess capabl entitl referenc object accord specifi capabl theori system capabl remov ani access control list mechan entiti onli capabl will actual capabl typic implement privileg data structur consist specifi access uniqu identifi object access practic file descriptor tradit oper system access everi object system capabl typic store oper system list mechan place prevent program directli modifi content capabl forg access chang object point system base capabilitybas address hardwar support capabl plessey system program possess capabl perform function pass program convert lessprivileg version delet oper system ensur onli specif oper occur capabl system order maintain integr secur polici introduct capabilitybas secur follow introduct assum basic knowledg unix system capabl defin protect object refer virtu possess user process grant process capabl henc interact object includ read data associ object modifi object execut data object process conceiv access capabl logic consist refer uniqu identifi object set suppos user process memori space exist follow string etcpasswd thi identifi uniqu object system doe specifi access henc capabl suppos follow valu etcpasswd o_rdwr thi identifi object set access howev capabl becaus user process possess valu noth access actual legitim suppos user program success execut follow statement int fd open etcpasswd o_rdwr variabl fd file descriptor process file descriptor tabl thi file descriptor capabl exist process file descriptor tabl suffici process doe inde legitim access object key featur thi arrang file descriptor tabl kernel memori directli manipul user program share capabl process tradit oper system program commun storag refer exampl path pass commandlin paramet socket store disk refer capabl valid befor system central question author refer evalu thi becom critic issu especi process behalf differ authoritybear entiti becom suscept program error confus deputi problem veri frequent result secur hole capabilitybas system capabl themselv pass process storag mechan oper system maintain integr capabl mani oper system implement facil veri capabl file descriptor file handl exampl unix file descriptor discard close inherit child process process socket sever obstacl prevent benefit capabilitybas address system realiz tradit oper system environ chief obstacl fact entiti hold capabl process file persist maintain integr secur inform capabl repres oper system trust user program read capabl tamper object refer access consequ program regain access object referenc disk oper system valid access request access control list mechan mandat novel approach solv thi problem involv orthogon persist oper system thi wa realis flex machin system entiti discard capabl invalid henc requir acllik mechan restor capabl time oper system maintain integr secur capabl storag volatil nonvolatil time perform serial task requir user program case oper system becaus user program reliev thi respons trust reproduc onli legal capabl valid request access access control mechan posix capabl posix draft specifi concept permiss call capabl howev posix capabl differ capabl thi articl posix capabl associ ani object process cap_net_bind_servic capabl listen ani tcp port commerci system keyko ero extrem reliabl oper system keyko successor capro ero successor project develop ero code base commerci coyoto ero successor kaneton cambridg cap comput carnegi mellon univers cmmp hydra oper system carnegi mellon univers cm staro ibm intel iapx plessey system symbian flex microkernel open kernel lab nicta amoeba distribut oper system refer levi henri capabilitybas comput system digit equip corpor isbn electron version avail ero project program languag base capabl secur erightsorg mark miller kap yee jonathan shapiro capabl myth demolish technic report system laboratori john hopkin univers avail onlin cambridg cap comput levi current capabilitybas address theodor linden decemb oper system structur support secur reliabl softwar acm comput survey csur issn li gong secur identitybas capabl system sp ieee symposium secur privaci capabilitybas address hardwar implement capabilitybas address implement capabl ibm support capabilitybas address ero fast capabl system posix capabl linux posix capabl file posix file capabl parcel power root extern link captalk mail list review capabl myth demolish critic refer abov capabl inform introduct capabl rick smith interview jonathan shapiro design ero capabl theori sound byte histori capabl approach