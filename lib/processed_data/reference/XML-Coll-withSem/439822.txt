prefetch input queue smackbot articl merg sinc octob instruct process articl merg amboxmov style merg arrow ha thi articl modern processor load instruct clock cycl befor execut thi achiev preload machin code memori prefetch input queue piq thi behavior onli appli von neumann comput harvard architectur comput selfmodifi code sort instruct pipelin nearli comput fulfil three requir usual prefetch behavior piq invis program model cpu howev circumst behavior piq visibl account programm processor chang mode realmod protect mode vice versa piq ha flush els cpu will continu translat machin code written mode piq flush processor translat code wrong gener invalid instruct execut selfmodifi code chang processor code immedi front current locat execut chang processor interpret code alreadi load piq simpli execut copi alreadi load piq alter version code ram andor cach thi behavior piq determin code execut insid emul directli hardwar real cpu emul will probabl simul thi behavior piqsiz chang code alway affect processor immedi deduc code execut emul processor invalid piq write address load piq exampl code code_starts_her mov eax ahead mov eax ahead jmp to_the_end code to_the_end thi selfmodifi program will overwrit jmp to_the_end nop encod jump jmp to_the_end assembl byte machin code nop will overwrit thi jump noth els jump replac donothingcod becaus machin code jump alreadi read piq probabl alreadi execut processor superscalar processor execut sever instruct onc pretend nt becaus backward compat chang code will ani chang execut flow exampl program detect size piq thi exampl nasm syntax selfmodifi assembl algorithm determin size piq code_starts_her xor cx cx regist cx xor ax ax regist ax mov dx cs mov code_seg dx calcul codeseg jump edx cmp ax check ax ha alterd je found_siz mov nop_fieldcx opcod nop oper cx db opcod jump dw flush_queu follow offset rm dw pm dd code_seg dw code segment calcul abov flush_queu mov nop_fieldcx opcod ax increas ax nop_field nop time jmp found_siz regist cx size piq thi code real mode protect mode easili chang protect mode well chang dw offset dd chang dx edx top well dw dx bit address dd edx bit address thi code doe basic chang execut flow determin brute forc larg piq chang code front affect alreadi piq updat will ani chang code will affect program program ha size processor piq thi code execut protect mode oper system ani context switch els thi program return wrong valu instruct pipelin assembl languag cpu design