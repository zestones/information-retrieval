exit oper system mon process comput posix standard comput process termin execut exit system call gener exit multithread environ thread execut ha oper system reclaim resourc memori file process process dead process termin work unix unixlik oper system everi process start parent process execut fork system call parent process wait child process termin continu execut possibl fork child process child process termin die normal call exit abnorm fatal error signal eg sigterm sigint sigkil exit statu return kernel sigchld signal parent process exit statu retriev parent process oper system allow termin process provid specif exit statu system avail parent process typic thi small integ valu oper system eg plan allow charact string specifi clean exit oper typic perform cleanup oper process space befor return control oper system system program languag allow user subroutin regist invok program termin befor process actual termin good final step termin primit system exit call invok inform oper system process ha termin allow reclaim resourc process sometim possibl bypass usual cleanup offer _exit function deriv _exit termin current process immedi thi exampl forkexec routin exec call fail replac child process call atexit routin erron releas resourc belong parent orphan zombi oper system handl child process parent process ha termin special manner orphan process becom child special root process wait child process termin likewis strategi deal zombi process child process ha termin exit statu ignor parent process process becom child special parent process retriev child exit statu allow oper system complet termin dead process deal special case system process tabl consist exampl follow program noth termin return success statu system includ int main void exit exit_success includ int main void return exit_success includ int main void std exit exit_success return exit_success cobol identif divis programid successprogram procedur divis main move returncod program java public class success public static void main string arg systemexit batch file set exit perl binperl exit python usrbinpython rais systemexit unix shell exit assembl masm tasm model small stack code main proc mov servic termin error code mov al error code int interrupt gener interrupt main endp main start main programm prepar everyth int onc mov ax replac error code hex linux assembl nasm mov al function exit mov ebx return code int onli interrupt linux child process execut exit command exit statu fork kill command orphan process process parent process sigchld task thread wait extern link exit caus normal process termin linux man