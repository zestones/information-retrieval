analysi algorithm closedmouth comput complex theori analysi algorithm analyz algorithm determin amount resourc time storag necessari execut algorithm design work input arbitrari length usual effici complex algorithm function relat input length number step time complex storag locat space complex algorithm analysi import broader comput complex theori provid theoret estim resourc ani algorithm solv comput problem estim provid insight reason direct search effici algorithm theoret analysi algorithm common estim complex asymptot sens ie estim complex function reason larg length input big notat omega notat theta notat thi instanc binari search amount step proport logarithm log colloqui logarithm time usual asymptot estim becaus differ implement algorithm differ effici howev effici ani reason implement algorithm relat constant multipl factor call hidden constant exact asymptot measur effici sometim comput usual requir assumpt concern implement algorithm call model comput model comput defin term abstract comput eg ture machin andor postul oper execut unit time exampl sort set appli binari search ha element guarante singl binari lookup unit time time unit return answer exact measur effici peopl actual implement algorithm becaus precis thu enabl time expect spend execut peopl eg game programm hidden constant differ success failur time effici estim depend defin step analysi sens time requir perform step guarante bound abov constant care instanc analys count addit number step thi assumpt warrant context exampl number involv comput arbitrarili larg addit longer assum requir constant time compar time add integ integ pen paper runtim analysi runtim analysi theoret classif estim anticip increas time runtim algorithm input size usual denot increas runtim effici topic great interest comput scienc program second hour year finish execut depend algorithm implement thi confus analysi algorithm actual runtim cover articl perform analysi shortcom empir metric sinc algorithm platformindepend ie algorithm implement ani program languag ani comput ani oper system signific drawback empir approach gaug compar perform set algorithm exampl program specif entri sort list size suppos thi program implement comput stateoftheart machin linear search algorithm comput slower machin binari search algorithm benchmark test comput respect program someth follow list size comput runtim nanosecond comput runtim nanosecond ns ns ns ns ns ns ns ns base metric easi jump conclus comput algorithm superior effici comput howev size inputlist increas suffici number conclus dramat demonstr error list size comput runtim nanosecond comput runtim nanosecond ns ns ns ns ns ns ns ns ns ns ns ns ns ns ns year ns millisecond comput linear search program exhibit linear growth rate program runtim directli proport input size doubl input size doubl time quadrupl input size quadrupl runtim wherea comput binari search program exhibit logarithm ic growth rate doubl input size onli increas time constant amount thi exampl ns comput ostens faster machin comput will inevit surpass comput runtim becaus algorithm slower growth rate order growth main articl big notat inform algorithm exhibit growth rate order mathemat function input size function time posit constant provid upper bound limit runtim algorithm word input size greater constant algorithm slower thi concept frequent express big notat big notat formal discuss exampl sinc runtim insert sort grow quadrat input size increas insert sort order n big notat conveni express worstcas scenario algorithm express averagecas exampl worstcas scenario quicksort n averagecas runtim lg evalu runtim complex runtim complex worstcas scenario algorithm sometim evalu examin structur algorithm simplifi assumpt consid follow pseudocod posit integ input gt print thi print print comput will discret amount time execut instruct involv carri thi algorithm specif amount time carri instruct will vari depend instruct execut comput execut convent comput thi amount will determinist action carri step consid consum time step time algorithm abov step will onli onc worstcas evalu assum step will well thu total amount time step step loop step trickier evalu outer loop test step will execut time will consum time inner loop hand govern valu iter pass outer loop iter inner loop pass inner loop bodi step consum time inner loop test step consum time dure pass outer loop iter inner loop pass inner loop bodi step consum time inner loop test step consum time altogeth total time requir inner loop bodi express arithmet progress cdot factor left cdot right left frac right total time requir inner loop test evalu similarli cdot cdot factor left right left frac right therefor total time thi algorithm left frac right left frac right reduc left frac right left frac right ruleofthumb assum highestord term ani function domin rate growth thu defin runtim order thi exampl n highestord term conclud n formal thi proven follow prove left frac right left frac right le ge left frac right left frac right le constant greater equal le kn le therefor left frac right left frac right le ge eleg approach analyz thi algorithm declar equal unit time greater equal thi algorithm time break follow ileq growth rate analysi resourc methodolog runtim analysi util predict growth rate consumpt memori space exampl consid follow pseudocod manag realloc memori usag program base size file program manag file open file size everi kilobyt increas file size doubl amount memori reserv thi instanc file size increas memori will consum exponenti growth rate order algorithm algorithm effici optim algorithm speed memori asymptot analysi big notat best worst averag case comput complex theori perform analysi measur algorithm actual runtim perform polynomi time npcomplet donald knuth refer term lg shorthand howev thi case quantum comput proven induct cdot frac thi approach unlik abov approach neglect constant time consum loop test termin respect loop trivial prove omiss doe affect final result note thi extrem rapid unmanag growth rate consumpt memori resourc thoma cormen charl leiserson ronald rivest clifford stein introduct algorithm second edit mit press mcgrawhil isbn chapter foundat daniel green donald knuth mathemat analysi algorithm introduct algorithm second edit cormen leiserson rivest stein mit press cambridg ma usa isbn algorithm fundament data structur sort search edit robert sedgewick addisonwesley profession isbn art comput program donald knuth addisonwesley