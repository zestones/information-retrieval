static singl assign form jplevyak compil theori articl exampl pseudocod compil design static singl assign form abbrevi ssa form ssa intermedi represent ir everi variabl assign exactli onc exist variabl origin ir split version variabl typic indic origin subscript everi definit version ssa form usedef chain explicit singl element ssa wa develop ron cytron jeann ferrant barri rosen mark wegman ken zadeck ibm function languag compil scheme haskel continu pass style cp gener expect find ssa compil fortran ssa cp formal equival optim transform formul term immedi appli benefit primari ssa simultan simplifi improv result varieti compil optim simplifi properti variabl exampl consid thi piec code human assign necessari valu third second assign program perform reach definit analysi determin thi program ssa form immedi compil optim algorithm enabl strongli enhanc ssa includ constant propag spars condit constant propag dead code elimin global valu number partial redund elimin strength reduct regist alloc convert ssa convert ordinari code ssa form primarili simpl matter replac target assign variabl replac variabl version variabl reach point exampl consid follow control flow graph exampl control flow graph befor convers ssa notic chang left side leftarrow chang follow program thing exploit thi ssa creat variabl assign onli onc likewis distinguish subscript variabl thi exampl control flow graph partial convert ssa figur definit refer thing bottom block refer depend control flow answer add special statement call phi function block thi statement will gener definit choos depend arrow control arriv exampl control flow graph fulli convert ssa block simpli correct valu thi point add function answer onli version reach thi place problem gener question arbitrari control flow graph insert function variabl thi difficult question ha effici solut comput concept call domin frontier note function actual implement re marker compil place valu variabl group togeth function locat memori regist comput minim ssa domin frontier concept domin node strictli domin differ node control flow graph imposs reach pass thi becaus reach ani code ha domin strictli domin defin domin frontier node domin frontier node doe strictli domin doe domin immedi predecessor possibl immedi predecessor point view node control path nt earliest appear domin frontier captur precis place function node defin variabl definit definit alon redefinit will reach everi node domin onli leav node enter domin frontier account flow bring definit variabl moreov function control flow graph deal definit algorithm comput domin frontier set node number predecessor predecessor runner runner idom add runner domin frontier set runner idom runner note code abov predecessor node ani node control transfer node idom immedi domin node effici algorithm find domin frontier node thi algorithm wa origin describ paper effici comput static singl assign form control depend graph cytron ferrant rosen wegman zadeck acm tran program languag system chapter book modern compil implement java andrew appel cambridg univers press paper detail keith cooper timothi harvey ken kennedi rice univers describ algorithm paper titl simpl fast domin algorithm algorithm well engin data structur improv perform variat reduc number function minim ssa insert minim number function requir ensur assign valu exactli onc refer origin program refer uniqu requir ensur compil write operand oper howev function dead thi reason minim ssa doe necessarili produc fewest number function specif procedur type analysi function superflu caus analysi effici prune ssa prune ssa form base simpl observ function onli variabl live function live valu path function question variabl live result function assign function dead construct prune ssa form live variabl inform function insert phase decid function origin variabl nt live function insert point function nt insert anoth possibl treat prune dead code elimin problem function live onli ani input program will rewritten will argument anoth function enter ssa form rewritten nearest definit domin function will consid live long nearest definit domin argument live semiprun ssa semiprun ssa form attempt reduc number function incur rel high cost comput live variabl inform base follow observ variabl live entri basic block function dure ssa construct function ani blockloc variabl omit comput set blockloc variabl simpler faster procedur full live variabl analysi semiprun ssa form effici comput prune ssa form hand prune ssa form will fewer unnecessari function convert ssa form ssa form longer direct execut frequent top anoth ir remain direct correspond thi accomplish construct ssa set function map exist ir basic block instruct operand ssa counterpart ssa form longer map function discard leav onli nowoptim ir perform optim ssa form usual lead entangl ssaweb phi instruct operand root operand case colorout algorithm ssa naiv algorithm introduc copi predecessor path caus sourc differ root symbol phi destin phi multipl algorithm ssa fewer copi interfer graph approxim copi coalesc extens extens ssa form divid categori renam scheme extens alter renam criterion recal ssa form renam variabl assign valu altern scheme includ static singl form renam variabl statement static singl inform form renam variabl assign valu condit context variabl featurespecif extens retain singl assign properti variabl incorpor semant model addit featur featurespecif extens model highlevel program languag featur array object alias pointer featurespecif extens model lowlevel architectur featur specul predic compil ssa form ssa form rel develop compil commun mani older compil onli ssa form compil optim process reli exampl compil reli heavili ssa form includ eth compil wa public project incorpor gsa variant ssa llvm compil infrastructur ssa form scalar regist valu everyth memori primari code represent ssa form onli elimin onc regist alloc occur late compil process link time open sourc sgi compil orc ssa form global scalar optim code brought ssa form befor ssa form afterward orc extens ssa form repres memori ssa form well scalar valu version releas april gcc gnu compil collect extens ssa frontend gener gener code convert ssa form gimplifi optim middleend backend eventu translat optim intermedi code rtl execut lowlevel optim final turn rtl assembl languag ibm open sourc adapt java virtual machin jike rvm extend array ssa extens ssa allow analysi scalar array object field unifi framework extend array ssa analysi onli enabl maximum optim level appli frequent execut portion code modifi ibm jikesrvm jalapeo time standard java bytecod typesaf ssa safetsa bytecod class file demonstr signific perform benefit ssa bytecod sun microsystem java hotspot virtual machin ssabas intermedi languag jit compil mono ssa jit compil call mini jackcc opensourc compil academ instruct set jackal simpl code ssa intermedi represent interest variant replac function socal instruct instruct regist alloc place live rang physic regist compil boomerang decompil ssa form intern represent ssa simplifi express propag identifi paramet return preserv analysi portablenet ssa jit compil libfirm complet graph base ssa intermedi represent compil libfirm ssa form scalar regist valu code gener ssaawar regist alloc illinoi concert compil circa http wwwcsagucsdeduprojectsconcerthtml variant ssa call ssu static singl renam variabl assign valu condit context variabl essenti static singl inform form mention abov ssu form document john plevyak phd thesi refer practic improv construct destruct static singl assign form preston brigg keith cooper timothi harvey taylor simpson appel andrew modern compil implement cambridg univers press isbn avail java isbn isbn version cooper keith torczon linda engin compil morgan kaufmann isbn muchnick steven advanc compil design implement morgan kaufmann isbn richard kelsey march correspond continu pass style static singl assign form acm sigplan notic doi andrew appel april ssa function program acm sigplan notic doi compil optim valgrind extern link steven bosscher diego novillo gcc optim framework articl gcc ssa improv older ir ssa bibliographi extens catalogu ssa paper