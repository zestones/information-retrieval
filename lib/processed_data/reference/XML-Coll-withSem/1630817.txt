pollard rho algorithm logarithm lusum logarithm pollard rho algorithm logarithm algorithm solv discret logarithm problem analog pollard rho algorithm solv integ factor problem goal comput gamma alpha gamma beta mod beta belong group gener alpha algorithm comput integ alphaa betab alphaa betab mod assum simplic underli group cyclic order phi calcul gamma solut equat bb gamma aa pmod find algorithm floyd cyclefind algorithm find cycl sequenc x_i alpha a_i beta b_i function x_i mapsto x_ assum randomlook thu enter loop approxim sqrt frac pi step defin function follow rule divid three subset necessarili subgroup approxim equal size x_i doubl x_i in increment x_i in increment algorithm cyclic group prime order bin partit gto map left begin matrix bcdot xin xin acdot xin end matrix right defin map gtimesmathbb tomathbb gtimesmathbb tomathbb left begin matrix xin bmod xin bmod xin end matrix right left begin matrix bmod xin bmod xin xin end matrix right input gener element output integ ax failur initialis larr larr larr isin larr xi larr ai larr bi larr larr larr larr xi larr bi return failur larr ai mod return xi ne larr step exampl consid exampl group gener modulo order group gener group unit modulo algorithm implement follow program includ const int prime const int alpha gener const int beta void new_xab int int int switch case break case alpha break case beta break int main int int xx aa bb int new_xab new_xab new_xab printf break return result follow edit pmod gamma pmod solut expect prime anoth solut hold complex time approxim sqrt number refer pollard mont carlo method comput mod mathemat comput volum alfr menez paul van oorschot scott vanston handbook appli cryptographi chapter