positionindepend code tackat comput librari oper system technolog comput file format comput positionindepend code pic positionindepend execut pie machin instruct code execut properli memori resid pic commonli share librari librari code load locat program address space wo nt overlap ani memori exampl share librari pic wa older comput system lack mmu oper system applic singl address space mmuless system positionindepend code copi ani memori locat modif execut unlik relocat code requir special process link editor program loader suitabl execut locat code gener written compil special fashion order posit independ instruct refer specif memori address absolut branch replac equival program counter rel instruct extra indirect caus pic code effici modern processor design thi toler histori earli comput code wa positiondepend program wa built load address order multipl job separ program time oper care schedul job simultan job program requir load address exampl payrol program account receiv program built address oper time sometim oper multipl version program built differ load address expand option thing flexibl positionindepend code wa invent positionindepend code ani address oper chose load invent dynam address translat function provid mmu obsolet positionindepend code becaus everi job separ address programm build program address time address space becaus positionindepend code effici positiondepend code thi wa better solut problem problem attack wa memori wast happen code load multipl time multipl simultan job job entir ident program dynam address translat provid solut allow system simpli map differ job address byte real memori singl copi program program differ mere share lot common code exampl payrol program account receiv program probabl ident sort subroutin design invent share modul share librari form share modul main payrol account receiv program load separ memori share modul load onc simpli map address space thi introduc memori alloc problem positionindepend code solv abov program share modul lot singl program singl address space share modul built address system load time load program work thi programm built share modul address program sometim multipl version share modul built differ address thi obvious desir situat lot manual work wast address space positionindepend code rescu becaus share modul ani address program loader simpli load ani free address sort subroutin address payrol job simultan account receiv job address refer real memori onli copi sort subroutin real memori positionindepend code ha onli coordin work userlevel applic oper system well earliest system virtual memori address space oper system explicitli load individu modul overwrit memori avail oper system wa smaller oper system modul capabl whatev memori wa free time wa individu oper system modul positionindepend code invent virtual memori obsolet method becaus oper system virtual address space big everi modul oper system perman virtual address technic detail procedur call insid share librari typic small procedur linkag tabl stub call definit function thi notabl allow share librari inherit function call previous load librari version data refer positionindepend code usual indirectli global offset tabl store address access global variabl compil unit object modul locat offset code thi offset librari link linker link modul creat share librari merg set final offset code necessari adjust offset load share librari posit independ function access global data start determin absolut address current program counter valu thi form fake function call order return valu stack special regist powerpc sparc probabl risc processor store predefin standard regist processor architectur motorola motorola arm allow referenc data offset program counter thi specif target positionindepend code smaller regist demand henc effici window dll main articl dynamiclink librari microsoft window dll share librari unix sens posit independ code thi routin overridden previous load dll requir small trick share select global data code ha reloc ha load disk potenti nonshar process share mostli occur disk allevi thi limit window system dll premap differ address conflict necessari reloc librari befor memori share premap dll inform allow load arbitrari address necessari share techniqu window call memori map confus memorymap io sometim abl allow multipl process share instanc dll load memori howev realiti window alway abl share instanc dll load multipl process window requir compil program address space dll will access support posit independ dll specifi desir base address creat visual default offset multipl dll desir base address program reloc base offset specifi offset link window loader load execut memori execut check dll ha alreadi load offset execut wa creat dll dll alreadi load offset reloc base request execut note thi will provid share multipl process execut eg start differ account fast user switch necessarili differ program link dll platform mac os linux support form prebind well mac os system call prebind linux system implement program call prelink thi vastli differ memori map positionindepend execut positionindepend execut pie execut binari entir positionindepend code system onli pic execut reason pie binari securityfocus linux distribut allow pax exec shield address space layout random prevent attack exist execut code dure secur attack exploit reli offset execut code binari returntolibc attack dynam linker refer rick anderson januari dll hell microsoft develop network retriev share common dll doe provid signific save memori load window alway abl share instanc dll load multipl process read john levin octob chapter load overlay linker loader morgankauffman isbn extern link introduct posit independ code posit independ code intern program assembl languag pic