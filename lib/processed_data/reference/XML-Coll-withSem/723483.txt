memoiz zeroon softwar perform optim comput memoiz optim techniqu primarili speed comput program function call avoid repeat calcul result previouslyprocess input memoiz ha context purpos speed gain simpl mutuallyrecurs descent pars norvig gener topdown pars algorithm frost hafiz callaghan accommod ambigu leftrecurs polynomi time space relat cach memoiz refer specif case thi optim distinguish form cach buffer replac overview term memoiz wa coin donald michi deriv latin word memorandum rememb thu carri turn result function someth rememb memoiz confus memor becaus share cognat memoiz ha special comput memoiz function rememb result correspond set specif input subsequ call rememb input return rememb result recalcul thu move primari cost call paramet call function paramet set rememb associ fixeds set control replac algorithm set depend natur function function onli memoiz referenti transpar onli call function ha exact replac function call return valu special case thi restrict exist howev relat lookup tabl sinc memoiz tabl implement memoiz differ pure tabl lookup tabl memoiz popul transpar asneed basi memoiz lower function time cost exchang space cost memoiz function becom optim speed exchang higher comput memori space timespac cost algorithm ha specif comput comput complex function comput complex time ie time execut space tradeoff occur ie space speed gain thi differ optim involv timespac tradeoff strength reduct memoiz runtim compil time optim moreov strength reduct potenti replac expens oper multipl expens oper addit result save highli nonport machin wherea memoiz machineindepend strategi consid follow pseudocod function calcul factori function factori nonneg integ return convent els return factori time recurs invok factori paramet function everi integ ge final result function factori invari invok factori result will alway assign valu nonmemo version abov natur recurs algorithm involv requir invoc factori arriv result invoc turn ha associ cost time function return valu comput depend machin thi cost sum cost set function call stack frame cost compar cost subtract cost set recurs call stack frame abov cost multipli result recurs call factori cost store return result call context nonmemo implement everi toplevel call factori includ cumul cost step proport initi valu memoiz version factori function follow function factori nonneg integ alloc temporari integ variabl lookupt return lookuptablevalueforn els return convent els factori time recurs invok factori paramet store lookupt slot rememb result return function memoiz version abov lookupt assum persist storag space associ array key sinc thi lookup tabl will space comput memori time requir call factori repeatedli second call function paramet ha trade memori requir store lookup tabl thi exampl factori invok invok ani valu equal return valu will memoiz sinc factori will call recurs valu return valu will store call number greater onli recurs call will valu will store previou call thi memoiz allow function becom timeeffici call thu result eventu overal speed consider automat memoiz memoiz ad function intern explicitli comput programm abov memoiz version factori implement referenti transpar function automat memoiz extern techniqu employ norvig applic onli common lisp languag paper demonstr automat memoiz variou program languag applic automat memoiz formal explor studi term rewrit artifici intellig program languag function secondclass object lua firstclass function perl http perlplovercomminimemoizememoizehtml automat memoiz implement replac runtim function calcul valu onc valu ha calcul set paramet function doe thi valueforfunctionobject replac gener wrap ani referenti transpar function consid follow pseudocod assum function firstclass valu function memoizedcal function object paramet ha attach array valu alloc associ array call valu attach valu valu argument empti valu argument argument return valu argument function order call automat memoiz version factori abov strategi call factori directli code invok memoizedcal factori call check holder array ha alloc store result attach array entri exist posit valu argument argument key associ array real call factori suppli argument final entri array key posit return caller abov strategi requir explicit wrap call function memoiz languag allow closur memoiz implicitli functor factori return wrap memoiz function object pseudocod thi express follow function constructmemoizedfunctor function object paramet alloc function object call memoizedvers memoizedvers argument ha attach array valu refer thi comput scienc thi object alloc associ array call valu attach valu valu argument empti valu argument argument return valu argument return memoizedvers function call factori function object memfact creat follow memfact constructmemoizedfunctor factori abov exampl assum function factori ha alreadi defin befor call constructmemoizedfunctor thi point forward memfact call whenev factori desir languag lua sophist techniqu exist allow function replac function permit factori constructmemoizedfunctor factori essenti techniqu involv attach origin function object creat functor forward call origin function memoiz alia call actual function requir avoid endless recurs illustr function constructmemoizedfunctor function object paramet alloc function object call memoizedvers memoizedvers argument ha attach array valu refer thi comput scienc thi object alloc associ array call valu attach valu alloc function object call alia attach alia abil invok indirectli alia valu argument empti valu argument alia argument direct call return valu argument return memoizedvers function note step abov implicitli manag implement languag provid illustr parser topdown parser tri pars ambigu input respect ambigu cfg exponenti number step respect length input tri altern cfg order produc possibl pars tree eventu requir exponenti memori space memoiz wa explor pars strategi norvig demonstr algorithm dynam program stateset earley algorithm tabl cyk algorithm cock younger kasami gener introduc automat memoiz simpl backtrack recurs descent parser solv problem exponenti time complex basic idea norvig approach parser appli input result store memot subsequ reus parser reappli input richard frost memoiz reduc exponenti time complex parser combin view pure function topdown backtrack pars techniqu basic memoiz parser combin build block construct complex parser execut specif cfg wa explor context pars johnson drre wa examin consider depth ford form call packrat pars frost hafiz callaghan describ topdown pars algorithm memoiz refrain redund comput accommod ani form ambigu cfg polynomi time leftrecurs grammar leftrecurs grammar topdown pars algorithm requir polynomi space potenti exponenti ambigu pars tree compact represent local ambigu group compact represent compar tomita compact represent bottomup pars memoiz onli limit retriev previouslycomput result parser appli input posit repeatedli essenti polynomi time requir special perform follow addit task memoiz process view wrapper ani parser execut accommod evergrow direct leftrecurs pars impos depth restrict wrt input length current input posit algorithm memot lookup procedur determin reusabl save result compar save result comput context parser current context thi contextu comparison key accommod indirect hidden leftrecurs perform success lookup memot return complet resultset process onli return refer actual result eventu speed overal comput dure updat memot meoizat process group potenti exponenti ambigu result ensur polynomi space requir frost hafiz callaghan describ implement algorithm padl set higherord function call parser combin haskel enabl construct directli execut specif cfg languag processor import polynomi algorithm power accommod ani form ambigu cfg topdown pars vital respect syntax semant analysi dure natur languag process xsaiga site ha algorithm implement detail norvig increas power parser memoiz augment parser wa time complex earley algorithm demonstr case memoiz someth speed optim johnson drre demonstr anoth nonspe relat applic memoiz memoiz delay linguist constraint resolut point pars suffici inform ha accumul resolv constraint contrast speed optim applic memoiz ford demonstr memoiz guarante pars express grammar pars linear time languag result worstcas backtrack behavior consid follow grammar notat note abov exampl product read follow follow product read follow option thi grammar gener follow three variat string xac xbc xbd understood consid thi grammar pars specif topdown leftright pars string xxxxxbd rule will recogn xxxxxb descend recogn descend consum recogn return fail recogn claus will descend turn descend recogn mani recurs call return final recogn key concept inher phrase descend process forward fail retri altern pars backtrack primarili backtrack opportun memoiz pars consid function ruleacceptssomeinput rule posit input paramet follow rule rule consider posit offset current consider input input input consider return valu function ruleacceptssomeinput length input accept rule rule doe accept ani input offset string backtrack scenario memoiz pars process follow rule descend offset memoiz length posit rule fail descend queri posit rule memoiz engin return length thu save actual descend carri descend mani time befor abov exampl mani descent occur allow string xxxxxxxxxxxxxxxxbd fact ani number befor call recurs descend mani time will descend sinc return valu ruleacceptssomeinput xxxxxxxxxxxxxxxxbd will thi case parser syntact predic abl memoiz result predic pars well therebi reduc construct rule descent parser build pars tree dure pars memoiz onli length input match offset rule store subtre gener rule offset input sinc subsequ call rule parser will actual descend rebuild tree reason memoiz parser algorithm gener call extern code sometim call semant action routin rule match scheme insur rule invok predict order sinc ani backtrack syntact predic capabl parser everi grammar will backtrack predic check overhead store rule pars result everi offset input store pars tree pars process doe implicitli actual slow parser thi mitig explicit select rule parser will memoiz comput complex theori inform algorithm complex strength reduct compil optim replac expens oper equival expens lazi evalu share concept memoiz lookup tabl key data structur memoiz flyweight pattern object program design pattern kind memoiz note refer norvig peter techniqu automat memoiz applic contextfre pars comput linguist march frost richard hafiz rahmatullah callaghan paul modular effici topdown pars ambigu leftrecurs grammar intern workshop pars technolog iwpt aclsigpars june pragu frost richard hafiz rahmatullah callaghan paul parser combin ambigu leftrecurs grammar intern symposium practic aspect declar languag padl acmsigplan volum januari san francisco michi donald memo function machin learn natur hoffman berthold term rewrit share memoz algebra logic program third intern confer proceed kirchner levi volterra itali septemb mayfield jame al automat memoiz softwar engin tool realworld ai system tbd frost richard szydlowski barbara memoiz pure function topdown backtrack languag processors sci comput program frost richard memoiz achiev polynomi complex pure function execut specif nondeterminist topdown parsers sigplan notic frost richard monad memoiz correctnesspreserv reduct search canadian confer ai johnson mark memoiz topdown pars comput linguist septemb johnson mark drre jochen memoiz coroutin constraint proceed annual meet associ comput linguist cambridg massachusett ford bryan packrat pars practic lineartim algorithm backtrack master thesi massachusett institut technolog septemb tomita masaru effici pars natur language kluwer boston ma acar umut al select memoiz proceed acm sigplansigact symposium principl program languag orlean louisiana januari extern link exampl memoiz variou program languag memoiz memoiz small librari written tim bradshaw perform memoiz common lisp marti hall automat memoiz toolkit common lisp memoizepm perl modul implement memoiz function java memoiz exampl java dynam proxi class creat gener memoiz pattern memoiz doe nt support firstclass function toolkit support autom memoiz preprocess memoiz open sourc java memoiz annot pluggabl cach implement memoiz rubi modul implement memoiz method python memoiz python exampl memoiz ocaml memoiz implement syntax extens memoiz lua exampl implement gener memoiz function lua memoiz javascript extend function prototyp javascript xsaiga execut specif grammar public relat topdown pars algorithm support leftrecurs ambigu polynomi time space