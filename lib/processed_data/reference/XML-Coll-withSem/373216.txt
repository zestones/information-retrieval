kahan summat algorithm stemon numer analysi comput arithmet numer analysi kahan summat algorithm compens summat significantli reduc numer error total ad sequenc finit precis float point number compar obviou approach thi algorithm attribut william kahan algorithm pseudocod algorithm function kahansum input var sum input var compens lost loword bit input so good sum ala sum big small loword digit lost sum sum recov highord subtract recov low sum algebra alway bewar eagerli optimis compil next time lost low will ad fresh attempt return sum exampl sixdigit floatingpoint decim arithmet suppos sum ha attain valu valu input sixdigit float point number ha valu mani digit lost thi evalu written assimil recov vs origin full trail becaus thi sixdigit arithmet sum thu digit input met sum sum larg onli highord digit input number accumul step suppos input ha valu thi time shortfal previou stage ha anoth chanc size digit meet meet digit sum round good truncat thi extract whatev thi case matter excess will subtract time sum summat perform accumul sum hold sum accumul assimil sum nudg loword sum time thu summat proce guard digit better ani good perform calcul doubl precis input howev input alreadi doubl precis system suppli quadrupl precis input quadrupl precis anoth approach perform summat differ work hope valu sum becom larger individu differ valu quit differ work thu suffer signific truncat altern sort valu pair posit neg valu accumul sum remain close possibl great cost comput effort practic perform summat sort multiprecis arithmet perhap check behaviour anoth method rememb data avail limit precis digit sixdigit precis sum valid represent sum doe spuriou implic seventeendigit precis optimis compil optim perform compil attempt spot remov redund code sophist optim perform symbol express simplif code sum sum deduc constant comput loop sinc initialis statement input contract loop becom input sum sum final variabl waystat loop content reduc sum sum input ha entir remov desir featur optimis compil carri analys deduc summat input intend gener code employ maximum precis work will result code ruin algorithm algorithm execut affect nonmathemat optimis instanc quit common floatingpoint comput carri machin regist precis higher variabl held main storag ibmpc clone floatingpoint regist hold floatingpoint number main storag held onli well sequenc input sum sum compil ani unwant mathemat transform notic code statement execut regist hold result wa store ha regist organis stack overflow memori result statement refer perhap code arrang valu fetch memori similarli third statement store valu held precis regist will problem regist main storag thu equival speed access work algorithm will ruin optimis option help program will necessarili good program comput languag featur comput languag offer summat featur input apl read thi plu input sum input fortran semifunct sum suppli compil intrins implement will inde best method ala fortran manual hand offer detail intern work mere result will precis input inspect code gener compaq visual fortran compil simpl usag reveal equival load sum add input store sum attempt hold valu sum regist therefor addit perform precis greater sum will lost result store sum retriev noth straight summat program languag exist volatil keyword ensur regist writtenread tofrom memori thi disabl optimis code els fail care test scrutini code gener rearrang algorithm select compil option deliv good result thi situat final word manual prepar embed assemblerlik statement ensur gener exactli machin code desir thi facil offer compil cours invoc util routin written separ machin code refer kahan william jan remark reduc truncat error commun acm doi higham nichola accuraci float point summat siam journal scientif comput doi goldberg david mar everi comput scientist floatingpoint arithmet acm comput survey doi