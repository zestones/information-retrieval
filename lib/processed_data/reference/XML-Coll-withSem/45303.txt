thread comput scienc stbot thread concurr comput oper system technolog form code consist entir subroutin call thread code process thread execut thread comput scienc short thread execut thread program split simultan pseudosimultan task fork thread process es differ oper system anoth gener thread insid process differ thread process share resourc differ process es singl processor multithread gener occur timedivis multiplex time slice veri parallel execut multipl task comput multitask processor switch differ thread thi context switch ing happen fast illus simultan user multiprocessor multicor system thread achiev multiprocess differ thread process liter simultan differ processor core mani modern oper system directli support timesl multiprocessor thread process schedul oper system kernel allow programm manipul thread system call interfac implement call kernel thread wherea lightweight process lwp specif type kernel thread share inform absent program implement thread timer signal method interrupt execut henc perform sort ad hoc timesl sometim call userspac thread thread compar process thread distinguish tradit multitask oper system process process typic independ carri consider inform separ address space interact onli systemprovid interprocess commun mechan multipl thread hand typic share inform process share memori resourc directli context switch thread process typic faster context switch process system window nt cheap thread expens process oper system great differ multithread popular program execut model allow multipl thread exist context singl process share process resourc abl execut independ thread program model provid develop abstract concurr execut howev perhap interest applic technolog appli singl process enabl parallel execut multiprocessor system thi advantag multithread program allow oper faster comput system multipl cpu cpu multipl core cluster machin thi becaus thread program natur lend themselv truli concurr execut case programm care avoid race condit nonintuit behavior order data correctli manipul thread will rendezv time order process data correct order thread requir atom oper implement semaphor order prevent common data simultan modifi read process modifi careless primit lead deadlock oper system schedul thread preemptiv multithread gener consid superior approach allow oper system determin context switch occur cooper multithread hand reli thread themselv relinquish control onc point thi creat problem thread wait resourc becom avail disadvantag preemptiv multithread system context switch inappropri time caus prioriti invers bad avoid cooper multithread tradit mainstream comput hardwar support multithread switch thread wa gener alreadi quicker full process context switch es processor embed system higher requir realtim behavior support multithread decreas thread switch time perhap alloc dedic regist file thread savingrestor common regist file late idea execut instruct multipl thread simultan ha becom simultan multithread thi featur wa introduc intel pentium processor hyperthread process thread fiber main articl process comput fiber comput scienc process heaviest unit kernel schedul process resourc alloc oper system resourc includ memori file handl socket devic handl window process share address space file resourc explicit method inherit file handl share memori segment map file share process typic preemptiv multitask howev window older version mac os cooper nonpreempt multitask thread lightest unit kernel schedul thread exist process multipl thread exist process share memori file resourc thread preemptiv multitask oper system process schedul preemptiv thread resourc stack copi regist includ program counter threadloc storag ani situat distinct kernel thread user thread manag schedul kernel wherea manag schedul userspac thi articl term thread refer kernel thread wherea fiber refer user thread fiber cooper schedul fiber explicitli yield allow anoth fiber fiber schedul ani thread process thread fiber issu concurr data structur thread process share address space thi allow concurrentlyrun code coupl tightli conveni exchang data overhead complex ipc share thread howev simpl data structur becom prone race hazard requir cpu instruct updat thread attempt updat data structur time find unexpectedli chang underfoot bug caus race hazard veri difficult reproduc isol prevent thi thread api offer synchron primit mutex lock data structur concurr access uniprocessor system thread lock mutex sleep henc trigger context switch multiprocessor system thread poll mutex spinlock sap perform forc processor smp system contend memori bu especi granular lock fine io schedul mani fiber implement entir userspac result context switch fiber process extrem effici becaus doe requir ani interact kernel context switch perform local save cpu regist current execut fiber load regist requir fiber execut sinc schedul occur userspac schedul polici easili tailor requir program workload howev block system call fiber problemat fiber perform system call block fiber process unabl system call return typic exampl thi problem perform io program written perform io synchron io oper initi system call doe return io oper ha complet interven period entir process block kernel starv fiber process execut common solut thi problem provid io api implement synchron interfac nonblock io intern schedul anoth fiber io oper progress solut provid block system call altern program written avoid synchron io block system call suppli fiber api suno implement lightweight process lwp fiber green thread netbsd dragonfli bsd implement lwp thread well model suno suno well netbsd netbsd implement level model multiplex user level fiber kernel thread model suno well netbsd elimin fiber support return model http kernel thread simplifi user code move complex aspect thread kernel program doe nt schedul thread explicitli yield processor user code written familiar procedur style includ call block api starv thread howev kernel thread uniprocessor system forc context switch thread ani time thu expos race hazard concurr bug otherwis lie latent smp system thi exacerb becaus kernel thread actual execut concurr separ processorsshh model thread creat user correspond schedul entiti kernel thi simplest possibl thread implement linux usual librari implement thi approach nptl map number applic thread number kernel entiti virtual processor thi compromis kernellevel userlevel thread gener thread system complex implement kernel user thread becaus chang kernel userspac code requir mn implement thread librari respons schedul user thread avail schedul entiti thi context switch thread veri fast avoid system call howev thi increas complex likelihood prioriti invers well suboptim schedul extens expens coordin userland schedul kernel schedul model impli applicationlevel thread map singl kernellevel schedul entiti kernel ha knowledg applic thread fiber thi approach context switch veri fast addit implement simpl kernel support thread major drawback howev benefit hardwar acceler multithread processor multiprocessor comput thread schedul time implement mani differ incompat implement thread includ kernellevel userlevel implement note fiber implement oper system support oper system librari provid explicit support exampl microsoft window window nt support fiber api applic gain perform improv manag schedul themselv reli kernel schedul tune applic microsoft sql server user mode schedul fiber mode exampl thi userlevel implement exampl gnu portabl thread fsu pthread appl inc thread manag realbas includ api cooper thread netscap portabl runtim includ userspac fiber implement hybrid implement exampl schedul activ netbsd nativ posix thread librari implement model oppos kernel userspac implement model marcel project thread inform block hardwar multithread comput hardwar multicor comput simultan multithread theori commun sequenti process comput multitask messag pass problem thread safeti prioriti invers techniqu protothread thread pool pattern lockfre waitfre algorithm refer createfib msdn david butenhof program posix thread addisonwesley isbn bradford nichol dick buttlar jacquelin proulx farel pthread program oreilli associ isbn charl northrup program unix thread john wiley son isbn mark walmsley multithread program springer isbn paul hyde java thread program sam isbn bill lewi thread primer guid multithread program prentic hall isbn steve kleiman devang shah bart smaalder program thread sunsoft press isbn pat villani advanc program file thread process synchron harpercollin publish isbn jim beveridg robert wiener multithread applic addisonwesley isbn thuan pham pankaj garg multithread program window nt prentic hall isbn len dorfman marc neuberg multithread mcgrawhil osborn media isbn alan burn andi well concurr ada cambridg univers press isbn uresh vahalia unix intern frontier prentic hall isbn alan denni net multithread man public compani isbn tobin titu fabio claudio ferracchiati srinivasa sivakumar tejaswi redkar sandra gopikrishna thread handbook peer inform isbn tobin titu fabio claudio ferracchiati srinivasa sivakumar tejaswi redkar sandra gopikrishna visual basic net thread handbook wrox press isbn extern link articl queri slice parallel execut join thread pool pattern java binilda ar technica articl multithread answer frequent question compprogrammingthread problem articl free lunch fundament turn concurr softwar herb sutter articl problem thread edward lee articl multithread bad idea chri reath posix thread explain daniel robbin multithread solari oper environ parallel comput topic gener highperform comput parallel bitlevel parallel instruct level parallel data parallel task parallel thread superthread hyperthread theori speedup amdahl law flynn taxonomi sisd bull simd bull misd bull mimd cost effici gustafson law karpflatt metric parallel slowdown element process thread fiber parallel random access machin coordin multiprocess multithread multitask memori coher cach coher barrier synchron distribut comput grid comput program program model implicit parallel explicit parallel hardwar comput cluster beowulf symmetr multiprocess nonuniform memori access cach onli memori architectur asymmetr multiprocess simultan multithread share memori distribut memori massiv parallel process superscalar process vector process supercomput stream process gpgpu softwar distribut share memori applic checkpoint warewulf api posix thread openmp messag pass interfac mpi upc intel thread build block boostthread problem embarrassingli parallel grand challeng softwar lockout