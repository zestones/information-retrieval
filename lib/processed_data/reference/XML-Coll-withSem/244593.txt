lock comput scienc lisatwo concurr control comput scienc lock synchron mechan enforc limit access resourc environ mani thread execut lock enforc concurr control polici type gener lock advisori lock thread cooper acquir lock befor access correspond data system implement mandatori lock attempt unauthor access lock resourc will forc entiti attempt access binari semaphor simplest type lock term access data distinct share read onli exclus read write mode scheme provid share mode sever thread acquir share lock readonli access data mode exclus intendtoexclud intendtoupgrad wide implement independ type lock chosen abov lock classifi happen lock strategi prevent progress thread lock design block execut thread request lock allow access lock resourc spinlock lock thread simpli wait spin lock becom avail veri effici thread onli block short period time avoid overhead oper system process reschedul wast lock held long period time lock typic requir hardwar support effici implement thi usual form atom instruct testandset fetchandadd compareandswap instruct allow singl process test lock free free acquir lock singl atom oper uniprocessor architectur option uninterrupt sequenc instruct special instruct instruct prefix disabl interrupt temporarili thi techniqu doe work multiprocessor sharedmemori machin proper support lock multiprocessor environ requir quit complex hardwar andor softwar support substanti synchron issu reason atom oper requir becaus concurr task execut logic exampl consid follow code lock lock mypid lock free set abov exampl doe guarante task ha lock sinc task test lock time sinc task will detect lock free task will attempt set lock task set lock dekker peterson algorithm possibl substitut atom lock oper avail careless lock result deadlock livelock deadlock occur process hold lock attempt acquir second lock second lock alreadi held anoth process process will block second process attempt acquir lock held process system ha deadlock progress will number strategi avoid recov deadlock designtim runtim common standard lock acquisit sequenc combin interdepend lock alway acquir releas specif defin cascad order granular befor introduc lock granular understand three concept lock lock overhead extra resourc lock memori space alloc lock cpu time initi destroy lock time acquir releas lock lock program overhead associ usag lock content thi occur whenev process thread attempt acquir lock held anoth process thread granular avail lock processthread will request lock held exampl lock row entir tabl lock cell entir row deadlock situat task wait lock hold lock wait someth task will wait forev tradeoff decreas lock overhead decreas lock content choos number lock synchron import properti lock granular granular measur amount data lock protect gener choos coars granular small number lock protect larg segment data result lock overhead singl process access protect data wors perform multipl process concurr thi becaus increas lock content coars lock higher likelihood lock will unrel process proceed convers fine granular larger number lock protect fairli small amount data increas overhead lock themselv reduc lock content lock increas risk deadlock databas manag system exampl lock protect order increas granular record data entir tabl coars granular tabl lock tend best perform singl user wherea fine granular record lock tend best perform multipl user databas lock databas lock ensur transact synchron ie transact process concurr interleav transact lock ensur concurr execut transact turn equival serial order transact howev deadlock becom unfortun sideeffect lock databas deadlock prevent predetermin lock order transact detect waitsfor graph altern lock databas synchron avoid deadlock involv total order global timestamp mechan employ manag action multipl concurr user databas purpos prevent lost updat dirti read type lock pessimist optimist lock pessimist lock thi wherebi user read record intent updat place exclus lock record prevent user manipul thi els manipul record user releas lock downsid user lock veri long time therebi caus frustrat pessimist lock thi mainli environ datacontent degre user request databas system ani time heavi cost protect data lock cost roll transact concurr conflict occur pessimist concurr best implement lock time will short programmat process record pessimist concurr requir persist connect databas scalabl option user interact data becaus record lock rel larg period time appropri web applic develop optimist lock thi allow multipl concurr user access databas whilst system copi initialread user user updat record applic determin anoth user ha chang record sinc wa read applic doe thi compar initialread held memori databas record verifi ani chang record ani discrep initialread databas record violat concurr rule henc caus system drop ani updat request error messag gener user start updat process improv databas perform reduc amount lock requir therebi reduc load databas server work effici tabl requir limit updat sinc user lock howev updat fail downsid constant updat failur high volum updat request multipl concurr user frustrat user optimist lock thi appropri environ low content data readonli access data requir optimist concurr extens net address mobil disconnect applic lock data row prolong period time infeas maintain record lock requir persist connect databas server possibl disconnect applic problem lock lockbas resourc protect threadprocess synchron ha mani disadvantag caus block threadsprocess wait lock set lock releas lock handl add overhead access resourc chanc collis veri rare howev ani chanc collis race condit lock vulner failur fault thread hold lock die stallsblock goe ani sort infinit loop thread wait lock wait forev program lock extrem errorpron notori deadlock bug veri subtl imposs reliabl reproduc race condit lock content limit scalabl add complex balanc lock overhead content uniqu problem domain applic well sensit design implement lowlevel system architectur chang balanc chang life cycl ani applicationimplement entail tremend chang updat rebal lock onli compos ie manag multipl concurr lock order atom delet item tabl insert tabl rel elabor overhead softwar support perfect adher applic program rigor convent prioriti invers high prioriti threadsprocess proceed low prioriti threadprocess hold common lock convoy thread wait thread hold lock deschedul timeslic interrupt fault lock convoy hard debug bug associ lock time depend extrem hard repeat strategi avoid lock entir nonblock synchron method lockfre program techniqu transact memori languag support barrier comput scienc languag support lock depend languag standard api handl mutex howev posix pthread api provid lock support straightforward visual allow add synchron attribut code mark method synchron thi specif window architectur visual compil java program languag provid keyword synchron lock block code method object program languag lock keyword ensur block code complet interrupt thread synchron keyword java python doe provid lock keyword possibl lower level mutex mechan acquir releas lock rubi doe nt provid keyword synchron possibl explicit low level mutex object assembl lock prefix prevent anoth processor anyth middl oper guarante atom refer design data tier compon pass data tier microsoft august retriev marshal dave march mutual exclus lock retriev synchron msdnmicrosoftcom retriev synchron sun microsystem retriev lundh fredrik juli thread synchron mechan python retriev program rubi thread process retriev semaphor program monitor synchron mutual exclus critic doublecheck lock lockfre waitfre algorithm file lock