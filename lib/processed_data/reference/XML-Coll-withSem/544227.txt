random access machin scarecro comput model comput scienc random access machin ram abstract machin gener class regist machin ram veri counter machin ad capabl indirect address regist counter machin ram ha instruct finitest portion machin socal harvard architectur ram equival univers ture machin program regist well data call random access store program machin rasp exampl socal von neumann architectur closest common notion comput togeth ture machin counter machin model ram rasp model comput complex analysi van emd boa call three plu pointer machin sequenti machin model distinguish parallel random access machin model introduct random access machin model ram concept random access machin ram start simplest model socal counter machin model addit move counter machin howev enhanc machin conveni indirect address second move model convent accumulatorbas comput addit auxiliari dedic regist common call accumul formal definit random access machin random access machin ram abstract computationalmachin model ident multipleregist counter machin addit indirect address discret instruct finit machin tabl machin deriv target regist address directli instruct ii indirectli content eg number label pointer regist specifi instruct definit regist locat address uniqu distinguish designationloc equival natur number content singl natur number precis will quasiform symbol boolosburgessjeffrey specifi regist content oper regist content regist address label variabl fill natur number letter eg copydeposit replac destruct sourc exampl content sourc regist address plu destin regist address sourc destin place content regist number will regist exampl content sourc regist address destin regist address content regist number thi number will regist note stand thi second exampl ambigu otherwis specifi usag hereaft will content sourc regist remain regist ie altern content regist remov regist place regist therebi leav regist empti definit direct instruct specifi instruct address sourc destin regist content will subject instruct definit indirect instruct specifi pointer regist content address target regist target regist sourc destin variou copi instruct provid exampl thi regist address indirectli standardconvent thi articl will specifi directindirect abbrevi di paramet paramet instruct exampl copi directli sourc regist address regist instruct indirectli destin address pointerregist suppos regist destin instruct will follow definit content sourc regist instruct sourc regist address specifi directli instruct ii indirectli pointer regist specifi instruct definit content pointer regist address target regist definit content pointer regist point target regist target sourc destin regist definit destin regist instruct deposit result sourc regist address specifi directli instruct ii indirectli pointer regist specifi instruct sourc destin regist refresh counter machin model melzak provid easi visual counter machin regist hole ground hole hold pebbl instruct hole comput person machin add increment remov decrement singl pebbl addit pebbl excess pebbl infinit suppli hole small accommod pebbl comput dig hole bigger minski hopcroftullman offer visual multitap ture machin mani leftend tape regist tape length unbound everi squar blank left mark distanc tape head left measur number tapesquar repres natur number regist decrement count squar tape head move left increment move print eras mark tape onli condit instruct check head left test leftend mark jumpifmark instruct follow instruct mnemon eg clr arbitrari standard exist regist machin ha memori extern finitest machin unbound cf footnotecount unbound collect discret uniquelylabel locat unbound capac call regist regist hold onli natur number posit integ list sequenti instruct finit machin tabl eg type primit oper oper content regist final conditionalexpress form ifthenels avail test content regist branchjump finit machin default instructionsequ base model model closest minski visual lambek increment content regist decrement content regist content regist jump instruct iz els continu instruct instruct mnemon action regist action finit machin instruct regist ir increment ir ir decrement dec ir ir jump jz ir els ir ir halt ir ir base model successor model successor function peano axiom increment content regist clear content regist content regist rj equal content regist rk jump instruct iz els goto instruct instruct mnemon action regist action finit machin instruct regist ir clear clr ir ir increment ir ir jump equal je ir els ir ir halt ir ir base model elgotrobinson investig bound unbound rasp successor model copi place clear increment content regist copi content regist rj regist rk content regist rj equal content regist rk jump instruct iz els goto instruct creat conveni instruct base set three base set abov equival sens creat instruct set instruct anoth set interest exercis hint minski declar reserv regist eg call eras number choic model will depend author find easiest demonstr proof moreov base set creat ani primit recurs function cf minski boolosburgessjeffrey cast net wider captur total partial mu recurs function will discuss context indirect address howev build primit recurs function difficult becaus instruct set primit tini solut expand set conveni instruct anoth set will subroutin convent sens block instruct creat base set mnemon formal sens block expand baseinstruct equival will requir temporari auxiliari regist model thi account ii design machinesmodel instruct built exampl base set creat clr block instruct count regist observ hint mention abov clr equiv loop jz exit dec jz loop exit thi conveni onli thi increas model intrins power exampl expand set includ uniqu instruct three set plu uncondit jump ie clr dec cpi rs jz je rj rk author pick condit jump eg shepherdsonsturgi abov set minu je perfectli accur jnz jump place jz anoth possibl conveni instruct indirect oper exampl indirect address daili live notion indirect oper unusu exampl treasur hunt locat tom_ _beckys_cave_in_pirate_chest will find map direct treasur locat tom_ _beckys_cav dig find wooden box insid box map locat treasur under_thatchers_front_porch locat under_thatchers_front_porch jackhamm concret discov treasur sack rusti doorknob indirect specifi locat identifi pirat chest tom_ _beckys_cav pointer ani locat includ content treasur map provid address target locat under_thatchers_front_porch real action occur whi indirect oper major problem counter machin model follow rememb model abstract model fundament differ anyth physic real unbound number regist unbound capac problem appear dramat tri counter machin model build rasp random access store program machin ture equival thu comput ani partial mu recurs function melzak ad indirect holeandpebbl model model modifi comput goto provid exampl decim represent scale sort magnitud proof model ture equival unclear sinc program iteself left reader exercis minski wa abl demonstr suitabl difficulttous gdel number encod regist model indirect ture equival unbound regist note minski hint problem rasp doe nt offer solut elgot robinson prove rasp model ha indirect capabl comput recurs sequenti function paramet arbitrari length doe capabl modifi instruct gdel number doe figur footnot hand rasp model equip regist indirect address comput partial recurs sequenti function mu recurs function cook reckhow succinctli indirect instruct necessari order progam access unbound number regist input vari unbound capac regist versu bound capac statemachin instruct socal finit machin suppos normal definit algorithm veri finit number instruct instruct size capac hold symbolssign doe machin move arbitrarilylarg constant directli regist eg move move constant regist huge constant necessari start regist themselv creat machin finit number instruct eg multiply add subroutin dec quasiinfinit number sometim constant will creat clr follow repeat time eg constant regist ie instruct clr thi trick mention kleen problem aris number creat exhaust number instruct avail finit machin alway bigger constant number instruct avail finit machin unbound number regist versu bound statemachin instruct thi sever problem thi problem aris attempt build socal random access store program machin rasp univers machin univers ture machin finit machin interpret program instruct locat regist ie build nowaday call comput von neumann architectur observ counter machin finit machin call regist explicitli directli namenumb call regist number explicitli number regist exce capabl finit machin address regist outsid bound will unreach exampl finit machin onli reach regist reach address regist bound finit machin approach modifi program instruct store regist command thi exhaust instruct potenti unbound size whi berinstruct realli realli big number program instruct encod thi minski solv problem gdel number ing repres great inconveni model result noth intuit notion store program comput elgot robinson conclus respect rasp finit determin inde access unbound number regist eg fetch instruct onli rasp allow modif program instruct ha encod data gdel number fig context computerlik model rpt repeat instruct minski tantal solut problem cf offer firm resolut assert gener rpt oper instruct finitest machin thi exhaust ani amount storag allow finit comput sic ram model rpt oper requir infinit regist offer bound rpt togeth clr comput ani primit recurs function offer unbound rpt quot abov play role oper togeth clr comput mu recurs function doe discuss indirect ram model se refer hartmani appear cook lectur note uc berkeley ha firm notion indirect address thi becom clearer paper cook reckhow cook reckhow master thesi advisor hartmani model quit melzak model threeregist add subtract paramet copi cook reckhow model reduc number paramet regist call program instruct callout accumul ac solut nutshel design machinemodel unbound indirect provid unbound address regist potenti call ani regist matter mani thi work gener unbound regist requir abil clear increment possibl decrement potenti infinit loop thi sens solut repres unbound oper necessari hunt ad infinitim unbound string regist find pointer regist exactli ani regist circumst call indirect address provid content addressoperand machin tabl address target regist includ possibl bound indirect primit recurs function eschew minski approach monster number regist specifi machin model will comput confront thi problem indirect comput recurs function call recurs function total partial varieti simpler counter machin model bound form indirect therebi comput subclass primit recurs function primit recurs oper call definit case defin kleen boolosburgessjeffrey bound indirect labori tediou affair definit case requir machin determinedistinguish content pointer regist attempt time time success match thi content numbernam case oper explicitli declar thu definit case start eg lower bound address continu ad nauseam upper bound address attempt match number regist equal equal re number thi better els problem bound indirect will allow comput partial recurs function unbound indirect aka oper suppos abl continu number fact regist complet calcul success suppos nt continu ture equival counter machin unfortun singleregist minski gdel number method augment abil explor regist string ad infinitum necessari failur find someth defin algorithm fail termin cf kleen chapter xii partial recurs function thi exampl unbound indirect partial recurs function unbound indirect requir hardwar chang machin model onc thi chang model longer counter machin random access machin eg specifi finit machin instruct will specifi address regist interest will thi machin instruct provid explicit label ii pointerregist content address interest whenev instruct specifi regist address will specifi addit paramet id indirectdirect sens thi id paramet switch flip direct address specifi instruct indirect address pointer regist pointer regist model everi regist pointer regist specifi instruct thi mutual exclus exhaust choic anoth exampl definit case arithmet equival exampl deriv definit kleen exampl cpi indirectsourc rsourc directdestin rdestin assign code specifi direct address indirect address machin determin sourc address follow rs rs exampl suppos content regist ie content regist ie exampl cpi cpi indirect reg direct reg sourceregist address destinationregist address exampl cpi sourceregist address destinationregist address exampl cpi sourceregist address destinationregist address indirect copi instruct probabl ad instruct copi inde elgotrobinson provid model copi instruct cookreckhow provid accumulatorbas model onli indirect instruct copi accumul indirectli copi accumul indirectli plethora instruct becaus ani instruct singl regist augment indirect dual includ condit uncondit jump cf elgotrobinson model inclus indirect instruct will doubl number singl parameterregist instruct eg wors everi parameterregist instruct will possibl varieti eg cpi rs copi directli sourceregist directli destinationregist cpi rsp copi destinationregist indirectli sourc address sourcepoint regist rsp cpi rs rdp copi content sourceregist indirectli regist destin address destinationpoint regist rdp cpi rsp rdp copi indirectli content sourc regist address sourcepoint regist rsp destin regist address destinationpoint regist rdp manner everi threeregist instruct involv sourc regist destin regist will result varieti exampl addit will yield add add add add add rdp add rdp add rdp add rdp design regist accumul place strong restrict variou instruct allow greatli reduc plethora direct indirect oper howev result reduc instructionset suffici awar reduct will expens instruct signific oper notion accumul histor convent dedic regist accumul arithmet organ liter accumul number dure sequenc arithmet oper arithmet organ parallel storag organ receiv number add alreadi abl clear content store will call organ accumul quit convent principl comput machin vari type eg desk multipli standard ibm counter modern relay machin eniac boldfac origin goldstin von neumann bell newel howev accumul expens instruct arithmet oper respect call readmodifywrit instruct increment indirectli content regist point regist design accumul regist label instruct descript inci cpi content point content copi thi incement content cpi content point copi content stick specif accumul eg impli accumul instruct exampl inca howev write cpi instruct accumul call instruct ambigu empti paramet cpi cpi cpi cpi histor ha happen cpi instruct receiv distinct howev convent exist tradit eg knuth imaginari mix comput call load store ad id paramet lda di rs def cpi di rs sta di def cpi di typic accumulatorbas model will twovari arithmet constant oper eg add accumul content togeth ii specifi regist content onevari oper eg dec clr requir onli accumul instructiontyp deposit result eg sum differ product quotient remaind accumul exampl inca exampl adda rs rs exampl mula rs rs choos abbrevi mnemon becaus sourceregist destin regist alway accumul thu lda id rs sta id clra inca deca adda rs suba rs mula rs diva rs notion indirect address regist model ha unbound accumul bound regist provid unbound regist deriv indirect address minimimalist approach accumul schnhage doe thi anoth approach schnhage doe thi declar specif regist indirect address regist confin indirect rel thi regist schonhag model regist indirect well direct instruct regist ha convent perhap indirect address number maximum flexibl accumul will consid anoth regist subject increment decrement clear test direct copi shrink instruct singleparamet provid direct indirect exampl ldan id cpi id load accumul indirect regist stan id cpi id store accuml indirect regist whi thi interest approach reason instruct set paramet schnhage doe thi produc instruct set reduc ram posttur machin pose minimalist reduc regist accumul indirect regist eg unbound string very boundedcapac pigeonhol will noth hold very bound number eg lone bit valu likewis shrink accumul singl bit restrict ani arithmet regist indirect oper pull content regist accumul write accumul regist lda sta clr an an dec jz an iz jz iz push elimin altogeth constant regist call eras print eras print cpi eras cpi print clr dec jz iz jz iz renam copi instruct call dec left instruct posttur machin plu extra clrn eras print clrn left jz iz jz iz ture equival ram indirect abov inform ram unbound indirect capabl produc posttur machin posttur machin ture equival ram indirect ture equival slightli formal demonstr design model three reserv regist plu unbound set regist regist will consid squar tape regist point scan squar head current observ head thought condit jump observ indirect address cf elgotrobinson decrement increment appar head will move left squar will move content scan squar point indirect cpi fact tape leftend minor problem whenev left occur instruct will test determin content leav count thi choic design exampl machinemodel trigger event choos instruct set augment dec clr cpi rs jz halt follow tabl defin posttur instruct term ram equival instruct exampl function appar locat head tape regist shade mnemon label action regist action finit machin instruct regist ir start ir ir print cpi ir ir eras cpi ir ir left jz ir els ir ir dec halt jump_if_blank jz ir els ir ir halt jump_if_mark jz halt ir els ir ir halt ir ir exampl bound indirect yield machin ture equival thi demonstr mind instruct finit machin tabl bound ie finit besid mere finit set rule seqeunc oper solv specif type problem algorithm ha import featur finit definit input output ital ad knuth difficulti aris becaus regist explicit number machin call order access will build indirect cpi case oper address target regist will specifi content regist onc case oper ha determin thi number cpi will directli deposit content regist number regist will addit regist will call serv upcount follow actual construct demonstr proof inde simul indirect cpi hardwar design chang counter machinemodel howev note becaus thi indirect cpi bound sizeext finit machin rasp thi indirect cpi onli calcul primit recurs function full suit mu recurs function case oper describ kleen boolosburgessjeffrey author emphas util follow definit kleen modifi reflect familiar ifthenels construct case oper return natur number depend case satisfi start success case_last case satisfi number call default aka woop return design select paramet eg regist string rlast definit case true els true els case_next_to_last els case_last qlast true last els default default kleen requir predic qn test mutuallyexclus predic function produc onli true fals output boolosburgessjeffrey add requir case exhaust number regist repres address target regist thi number predic will test find trial anoth je follow onc number identifi explicitli case oper directlyexplicitli copi content thi regist definit case cpi def rlast clr cpi exit els cpi exit els case els case_n cpi rn exit els case_last els case_last cpi rlast exit els default woop base step recurs thi clr set regist je cpi exit case_n induct step thi rememb instanc explicit natur number case_n je _n _n cpi rn exit case_last induct bound case oper therebi bound indirect copi oper case_last je _last woop _last cpi rlast exit woop handl outofbound attempt exit case continu ad infinitum mu oper nt finit machin regist ha reach maximum count eg tabl ha instruct finit machin exampl model registertoregist readmodifywrit model cook reckhow commonlyencount cook rechkow model bit ternaryregist malzek model written knuth mnemon origin instruct mnemon tra read print load ani integ exampl load will clear regist add regist differ exampl add will doubl content regist regist differ exampl will clear regist copi rp rp indirectli copi content sourceregist point pointerregist rp destin regist copi rs rp rs rp copi content sourc regist rs destinationregist point pointerregist rp jnz iz condit jump posit ie gt jump instruct els continu sequenc cook reckhow call thi transfer control xj gt read copi input destin regist print rs copi content sourc regist rs output schnhage schnhage describ veri primit atom model chosen proof equival smm pointer machin model order avoid ani explicit address ha accumul content addit address regist current content initi model schnhage demonstr construct form common usabl form successor like ram thi articl mnemon lda gt constant explicit number lda directli load lda indirectli load sta directli store sta indirectli store jea iz els continu inca gt model schnhage machin ha instruct indic singl letter xxx involv skip paramet schnhage design accumul schnage mnemon will mnemon develop abov clra inca cpyan ldaa content point regist address regist content stan content point regist address content regist point jaz iz ambigu treatment indirect cpyan copytransf content work store_a_via_n stan ii peculiar indirect instruct ldaa gt footnot countabl unbound definit fact ani sort counter machin unbound register address regist specifi regist indic model requir finit unbound sens model impli upper limit number regist necessari job exampl requir thu model expand number regist necessari perform comput howev thi doe whatev number model expand countabl countingnumb option escap thi restrict provid unbound regist provid address regist specifi indirect address ture machin regist machin gener registerbas machin oppos turinglik tapebas machin counter machin simplest model indirect random access store program machin rasp ram steroid pointer machin restrict type ram pram parallel random access machin real ram infinit precis float point arithmet ram abstract model comput comput geometri extern link random access machin emul random access machin emul refer refer regist machin georg boolo john burgess richard jeffrey comput logic fourth edit cambridg univers press cambridg england origin boolosjeffrey text ha extens revis burgess advanc introductori textbook abacu machin model extens develop chapter abacu comput three model extens treat compar ture machin boolo origin form recurs arthur burk herman goldstin john von neumann preliminari discuss logic design electron comput instrument reprint gordon bell allen newel comput structur read exampl mcgrawhil book compani york isbn stephen cook robert reckhow timebound random access machin journal comput system scienc martin davi comput unsolv mcgrawhil book compani inc york calvin elgot abraham robinson randomaccess storedprogram machin approach program languag journal associ comput machineri octob hartmani comput complex random access store program machin mathemat system theori john hopcroft jeffrey ullman introduct automata theori languag comput ed read mass addisonwesley isbn difficult book center issu machineinterpret languag npcomplet stephen kleen introduct metamathemat northholland publish compani amsterdam netherland isbn donald knuth art comput program second edit addisonwesley read massachusett cf defin kind abstract machin automaton deal link structur joachim lambek receiv june program infinit abacu mathemat bulletin septemb appendix ii lambek propos formal definit program refer melzak kleen introduct metamathemat melzak receiv inform arthmet approach comput comput canadian mathemat bulletin septemb melzak offer refer acknowledg benefit convers dr ham mcilroy vyssot bell telephon labor dr wang oxford univers marvin minski receiv august recurs unsolv post problem tag topic theori ture machin annal math doi marvin minski comput finit infinit machin ed englewood cliff prenticehal chapter model digit comput chapter veri simpl base comput chapter defin program machin chapter discuss univers program machin regist regist john shepherdson sturgi receiv decemb comput recurs function journal associ comput machineri jacm extrem valuabl refer paper appendix author cite refer minim instruct comparison system kaphengst heinz ein abstrakt programmgesteuert rechenmaschin zeitschrift fur mathematisch logik und grundlagen der mathematik ershov oper algorithm russian dok akad nauk english translat automat express pter rzsa graphschemata und rekurs funktionen dialectica herm han die universalitt programmgesteuert rechenmaschinen mathphi semsterbericht gttingen arnold schnhage storag modif machin societi industri appli mathemat siam comput august schnhage equival smm successor ram random access machin resp storag modif machin theoret comput scienc peter van emd boa machin model simul appear jan van leeuwen handbbook theoret comput scienc volumn algorithm complex mit presselsevi isbn volum qa van emd boa treatment smm appear thi treatment clarifi schnhage close follow expand slightli schnhage treatment refer understand hao wang variant ture theori comput machin jacm journal associ comput machineri meet associ june