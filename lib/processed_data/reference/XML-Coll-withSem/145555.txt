xor swap algorithm quuxpluson articl unsourc statement algorithm articl exampl code articl unsourc statement sinc juli comput program xor swap algorithm xor bitwis oper swap distinct valu variabl data type temporari variabl algorithm standard swap algorithm requir temporari storag variabl xor swap algorithm howev temporari storag algorithm follow xor xor xor algorithm typic correspond three machin code instruct exampl ibm assembl code xr xr xr regist xr oper leav result regist argument howev problem remain storag locat valu store locat will xor instruct remain will swap note thi valu troubl onli storag locat proof xor swap work binari oper xor bit string length exhibit follow properti oplu denot xor commut oplu oplu associ oplu oplu oplu oplu ident exist bit string length oplu ani element invers oplu suppos regist tabl initi valu respect perform oper sequenc reduc result properti list abov step oper regist regist reduct initi valu xor oplu xor oplu begin align oplu oplu oplu oplu oplu end align xor begin align oplu oplu oplu oplu oplu oplu oplu end align code exampl function implement xor swap algorithm void xorswap int int note code doe swap integ pass immedi check memori locat distinct thi will remov problem caus possibl alias bodi thi function sometim incorrectli shorten thi code ha undefin behavior sinc modifi lvalu interven sequenc point reason practic amboxcont style thi articl help guard copyright violat factual inaccuraci juli algorithm uncommon embed assembl code veri limit space avail temporari swap variabl thi form swap avoid loadstor faster equival oper temporari variabl architectur oper requir operand regist requir swap avail temporari regist store data optim compil gener code xor swap situat reason avoid practic modern compil optim temporari variabl naiv swap case naiv swap amount memori number regist xor swap fast faster gener rule xor swap fact naiv swap will suit applic veri rare thi day age xor swap readabl complet opaqu anyon nt alreadi familiar techniqu modern desktop cpu xor techniqu consider slower temporari variabl swap reason modern cpu strive execut command parallel instruct pipelin xor techniqu input oper depend result previou oper execut strictli sequenti order effici tremend concern advis test speed xor techniqu temporari variabl swap target architectur xchg instruct modern optim compil work translat code intern flowbas represent transform mani befor produc machinecod output compil recogn optim convent temporarybas swap recogn highlevel languag statement correspond xor swap mani time written swap highlevel code translat compil simpl intern note variabl swap memori address ani amount machin code time target architectur support compil singl xchg exchang instruct perform swap singl oper xchg oper wa avail long ago wa call exch datacraft seri wa call xchg intel releas includ instruct xchg three instruct swap regist regist regist memori unabl swap content memori locat motorola exg oper onli swap regist regist inherit exch instruct machin program languag wa develop howev xchg instruct modern processor eg onli swap regist memori implicit lock instruct impos processor memori locat involv oper atom alias xor swap complic practic alias note abov attempt xorswap content locat result locat valu lost therefor xor swap blindli highlevel languag alias possibl variat underli principl xor swap algorithm appli ani revers binari oper replac xor addit subtract slightli differ larg equival formul void addswap int int unlik xor swap thi variat requir underli processor program languag method modular arithmet bignum guarante comput caus error integ overflow therefor rare practic xor swap note three properti exist invers element definit abelian group properti structur featur xor necessarili share abelian group group gener http symmetr differ xor link list