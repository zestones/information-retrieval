amdahl law ryankindelan parallel comput rule thumb speedup program multipl processor parallel comput limit sequenti fraction program exampl program parallel theoret maximum speedup parallel comput diagram matter mani processor amdahl law amdahl argument comput architect gene amdahl find maximum expect improv overal system onli system improv parallel comput predict theoret maximum speedup multipl processor speedup program multipl processor parallel comput limit time sequenti fraction program exampl program hour singl processor core portion hour parallel remain promis portion hour parallel mani processor devot parallel execut thi program minim execut time critic hour henc speed limit diagram descript amdahl law model relationship expect speedup parallel implement algorithm rel serial algorithm assumpt problem size remain parallel exampl problem size parallel implement algorithm algorithm oper arbitrarili fast remain oper paralleliz amdahl law maximum speedup parallel version time faster nonparallel implement technic law concern speedup achiev improv comput affect proport comput improv ha speedup exampl improv speed comput will improv portion affect fast will amdahl law overal speedup appli improv will frac frac thi formula wa deriv assum time comput wa unit time time comput will length time unimprov fraction minu plu length time improv fraction length time improv comput length improv time divid speedup length time improv final speedup comput divid time time abov formula doe anoth exampl task split add sped sped sped sped formula find time littl origin time therefor overal speed boost littl doubl origin speed formula minu notic speedup nt overal speed boost time half task onli sped ie sped parallel case parallel amdahl law proport program parallel ie benefit parallel minu proport parallel remain serial maximum speedup achiev processor frac frac limit tend infin maximum speedup tend practic performancepric fall rapidli increas onc small compon minu exampl minu problem sped maximum factor matter larg valu thi reason parallel comput onli small number processor problem veri high valu socal embarrassingli parallel problem great craft parallel program consist attempt reduc smallest possibl valu relat law diminish return amdahl law conflat law diminish return wherea onli special case appli amdahl law demonstr law diminish return pick optim term achiev speedup improv will monoton decreas improv improv howev pick nonoptim improv suboptim compon move improv optim improv increas return consid instanc illustr pick work find increas return work improv will find diminish return thu strictli speak onli optim case appropri demonstr law diminish return note ration improv system order nonoptim thi sens improv difficult consum develop time amdahl law doe repres law diminish return consid sort return ad processor machin fixeds comput will avail processor capac processor add system will add usabl power previou time doubl number processor speedup ratio will diminish total throughput head limit frac thi analysi neglect potenti bottleneck memori bandwidth io bandwidth scale number processor howev account bottleneck tend demonstr diminish return onli ad processor speedup sequenti program assum task ha independ roughli time comput work veri hard abl thi time faster thi onli reduc time comput littl contrast perform work fast thi will comput faster optim bigger speedup versu maximum speedup improv sequenti program wa sped time max speedup le frac lt lt fraction time befor improv spent wa improv exampl blue time faster t_n red second t_i blue second t_n t_n t_i max speedup le frac red fast t_n blue second t_i red second t_n t_n t_i max speedup le frac better therefor faster better time faster improv factor will result increas overal program speed howev improv factor presum requir effort will onli achiev overal speedup limit accord amdahl law theoret maximum speedup processor linear speedup howev uncommon observ speedup machin processor practic super linear speedup possibl reason cach aggreg parallel comput onli doe number processor chang doe size accumul cach differ processor larger accumul cach size entir data set fit cach dramat reduc memori access time produc addit speedup aris pure comput amdahl law doe nt account problem size scale increas number processor typic reduc rel amount nonparalleliz task amdahl rule thumb amdahl rule thumb byte memori byte second io requir instruct second support comput thi goe titl amdahl law speedup amdahl corpor ninetynineti rule gustafson law karpflatt metric brook law moor law note rodger refer gene amdahl http valid singl processor approach achiev largescal comput capabl afip confer proceed note gene amdahl ha approv complet text usenet compsyssup news group faq goe month rodger david improv multiprocessor system design acm sigarch comput architectur news archiv volum issu june tabl content special issu proceed annual intern symposium comput architectur isca year public publish intern symposium comput architectur proceed annual intern symposium comput architectur boston massachusett unit extern link gene amdahl oral histori interview charl babbag institut univers minnesota minneapoli reevalu amdahl law reevalu amdahl law gustafson law simpl interact amdahl law calcul amdahl law joel klein wolfram demonstr project amdahl law multicor era blog post parallel parallel comput topic gener highperform comput parallel bitlevel parallel instruct level parallel data parallel task parallel thread superthread hyperthread theori speedup amdahl law flynn taxonomi sisd bull simd bull misd bull mimd cost effici gustafson law karpflatt metric parallel slowdown element process thread fiber parallel random access machin coordin multiprocess multithread multitask memori coher cach coher barrier synchron distribut comput grid comput program program model implicit parallel explicit parallel hardwar comput cluster beowulf symmetr multiprocess nonuniform memori access cach onli memori architectur asymmetr multiprocess simultan multithread share memori distribut memori massiv parallel process superscalar process vector process supercomput stream process gpgpu softwar distribut share memori applic checkpoint warewulf api posix thread openmp messag pass interfac mpi upc intel thread build block boostthread problem embarrassingli parallel grand challeng softwar lockout