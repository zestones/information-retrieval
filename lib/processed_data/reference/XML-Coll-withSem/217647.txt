selfmodifi code sarrazip program paradigm articl weasel word comput scienc selfmodifi code code alter instruct intent otherwis execut selfmodifi code quit straightforward write assembl languag account cpu cach support high level languag interpret lisp program languag alter verb cobol difficult implement compil compil clipper spitbol fair attempt cobol encourag batch program techniqu selfmodifi code script languag perl python interpret program gener code execut usual thi variabl perform write file script languag interpret usag selfmodifi code variou purpos semiautomat optim depend loop runtim code gener special algorithm runtim loadtim popular exampl domain realtim graphic gener sort util prepar code perform key comparison describ specif invoc alter inlin object simul highlevel construct closur patch subroutin address call usual load time dynam librari invoc patch subroutin intern refer paramet actual address thi regard selfmodifi code case terminolog evolutionari comput system genet program hide code prevent revers engin disassembl debugg hide code evad detect virusspywar scan softwar fill memori architectur roll pattern repeat opcod eras program data burnin hardwar compress code decompress execut runtim eg memori disk space limit veri limit instruct set leav option selfmodifi code achiev function exampl instruct set comput machin onli subtractandbranchifneg instruct indirect copi someth equival program languag selfmodifi code alter instruct faulttoler second third type probabl kind mostli highlevel languag lisp optim statedepend loop pseudocod exampl repeat time increas els decreas someth selfmodifi code thi case simpli matter rewrit loop thi repeat time increas someth ha switch replac opcod increas abov opcod decreas note replac opcod easili written xor var address valu opcodeof xor opcodeof dec choos thi solut will depend cours valu frequenc chang attitud amboxcont style thi articl vagu phrase accompani inform statement selfmodifi code featur ani delay codeedit bad practic code harder read maintain earli day comput selfmodifi code wa order reduc usag memori wa extrem limit nt pose ani problem wa implement subroutin call return instruct set onli provid simpl branch skip instruct vari control flow thi applic relev ultra risc architectur theoret exampl instruct set comput donald knuth mix architectur selfmodifi code implement subroutin call alreadi critic system complex peopl fulli manag real time internet electr distribut network routin reli selfmodifi behavior necessarili selfmodifi code order function accept camouflag selfmodifi code wa hide copi protect instruct disk base program platform ibm pc appl ii exampl ibm pc compat floppi disk drive access instruct int appear execut program imag written execut memori imag program start execut selfmodifi code sometim program reveal presenc comput viru es shellcod virus shellcod selfmodifi code mostli thi combin polymorph code polymorph virus sometim call primit selfmut modifi piec code attack buffer overflow selfreferenti machin learn system tradit machin learn system preprogram learn algorithm adjust paramet howev sinc jrgen schmidhub ha publish sever selfmodifi system abil chang learn algorithm avoid danger catastroph selfrewrit selfmodif will surviv onli accord usergiven fit function error function reward function oper system becaus secur implic selfmodifi code major oper system care remov vulner becom concern typic program will intent modifi themselv malici chang exploit consequ troubl caus exploit os featur call wx write xor execut ha develop prohibit program ani memori writabl execut system prevent writabl chang execut write permiss remov system provid door sort allow multipl map memori differ permiss rel portabl bypass wx creat file permiss map file memori linux undocu sysv share memori flag execut share memori creat file window vista window xp wx protect data execut prevent disabl control panel metalevel program modifi behavior chang data store elsewher metaprogram polymorph justintim compil justintim compil java net actionscript program languag compil block bytecod pcode machin code suitabl host processor immedi execut fabric bellard tini compil ha justintimecompilerlibrari eg tccboot bootload compil load oper system onthefli graphic driver modern gpu perform jitcompil directx opengl glsl geometri fragment shader thu selfmodifi code sometim distribut multipl processor dsp selfmodifi hardwar cpu architectur emul techniqu jitcompil simul instruct set program languag becom compil target processor interact cach selfmodifi code architectur coupl data instruct cach arm mip core cach synchron explicitli perform modifi code flush data cach invalid instruct cach modifi memori area case short selfmodifi code execut slowli modern processor thi becaus modern processor will usual tri block code cach memori time program rewrit rewritten load cach result slight delay modifi codelet share cach modifi code case modifi memori address locat byte modifi code cach invalid issu modern processor usual selfmodifi code faster onli modif will occur rare case switch insid inner loop modern processor load machin code befor execut instruct instruct pointer modifi processor will notic execut code wa befor wa modifi prefetch input queue piq pc processor handl selfmodifi code correctli backward compat reason effici henri massalin synthesi kernel synthesi kernel written dr henri massalin phd thesi commonli view mother selfmodifi code massalin tini unix kernel structur object orient approach selfmodifi code code creat individu quaject filehandl gener code specif task allow synthesi kernel jit interpret appli number optim constant fold common subexpress elimin synthesi kernel wa extrem fast wa written entir assembl result lack portabl ha prevent massalin optim idea adopt ani product kernel howev structur techniqu captur higher level languag albeit complex exist midlevel languag languag compil allow develop extrem fast oper system applic paul haeberli bruce karsh object margin selfmodifi code optim gener favor reduc develop cost draw parallel heavi religi atmospher italian futurist movement rebel reflect comput scienc selfrepl quin comput refer selfmodifi batch file lar fosdal extern link selfmodifi code linux selfmodifi code synthesi effici implement fundament oper system servic henri massalin phd thesi synthesi kernel futurist program certifi selfmodifi code jrgen schmidhub public selfmodifi code selfreferenti machin learn system pcastl parent childset access syntax tree languag